
I0= { 
S->exp , c="$", pivote:-1
exp->high_level ; , c="$", pivote:-1
exp->function atom param exp , c="$", pivote:-1
exp->atom param => exp , c="$", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I0,function):
I1= { 
exp->function atom param exp , c="$", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c=";", pivote:0
atom->function atom param block , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
 }
 GOTO(I0,type):
I2= { 
atom->type label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->type label param block , c="(", pivote:0
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:0
label->int , c="inherits", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:0
atom->type label block , c=";", pivote:0
atom->type label param block , c=";", pivote:0
atom->type label inherits atom block , c=";", pivote:0
atom->type label param inherits atom param block , c=";", pivote:0
atom->type label block , c="+", pivote:0
atom->type label param block , c="+", pivote:0
atom->type label inherits atom block , c="+", pivote:0
atom->type label param inherits atom param block , c="+", pivote:0
atom->type label block , c="-", pivote:0
atom->type label param block , c="-", pivote:0
atom->type label inherits atom block , c="-", pivote:0
atom->type label param inherits atom param block , c="-", pivote:0
atom->type label block , c="*", pivote:0
atom->type label param block , c="*", pivote:0
atom->type label inherits atom block , c="*", pivote:0
atom->type label param inherits atom param block , c="*", pivote:0
atom->type label block , c="/", pivote:0
atom->type label param block , c="/", pivote:0
atom->type label inherits atom block , c="/", pivote:0
atom->type label param inherits atom param block , c="/", pivote:0
atom->type label block , c="in", pivote:0
atom->type label param block , c="in", pivote:0
atom->type label inherits atom block , c="in", pivote:0
atom->type label param inherits atom param block , c="in", pivote:0
 }
 GOTO(I0,protocol):
I3= { 
atom->protocol label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->protocol label extends atom block , c="(", pivote:0
label->int , c="extends", pivote:-1
atom->protocol label block , c=";", pivote:0
atom->protocol label extends atom block , c=";", pivote:0
atom->protocol label block , c="+", pivote:0
atom->protocol label extends atom block , c="+", pivote:0
atom->protocol label block , c="-", pivote:0
atom->protocol label extends atom block , c="-", pivote:0
atom->protocol label block , c="*", pivote:0
atom->protocol label extends atom block , c="*", pivote:0
atom->protocol label block , c="/", pivote:0
atom->protocol label extends atom block , c="/", pivote:0
atom->protocol label block , c="in", pivote:0
atom->protocol label extends atom block , c="in", pivote:0
 }
 GOTO(I0,let):
I4= { 
var_declaration->let label , c="=", pivote:0
label->int , c="=", pivote:-1
 }
 GOTO(I0,int):
I5= { 
label->int , c="=", pivote:0
label->int , c="(", pivote:0
label->int , c=";", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="in", pivote:0
 }
 GOTO(I0,():
I6= { 
atom->( high_level ) , c="(", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( structure ) , c="in", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
param->( ) , c="in", pivote:0
atom->( high_level ) , c=";", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="in", pivote:0
 }
 GOTO(I0,exp):
I7= { 
S->exp , c="$", pivote:0
 }
 GOTO(I0,sum_minus):
I8= { 
high_level->sum_minus , c=";", pivote:0
sum_minus->sum_minus + div_mult , c=";", pivote:0
sum_minus->sum_minus - div_mult , c=";", pivote:0
high_level->sum_minus , c="in", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:0
 }
 GOTO(I0,atom):
I9= { 
exp->atom param => exp , c="$", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c=";", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I0,div_mult):
I10= { 
sum_minus->div_mult , c=";", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
sum_minus->div_mult , c="in", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I0,var_declaration):
I11= { 
high_level->var_declaration = high_level , c=";", pivote:0
high_level->var_declaration = high_level , c="in", pivote:0
 }
 GOTO(I0,high_level):
I12= { 
exp->high_level ; , c="$", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
 }
 GOTO(I0,param):
I13= { 
high_level->param in high_level , c=";", pivote:0
high_level->param in high_level , c="in", pivote:0
 }
 GOTO(I0,label):
I14= { 
high_level->label = high_level , c=";", pivote:0
atom->label , c="(", pivote:0
high_level->label = high_level , c="in", pivote:0
atom->label , c=";", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="in", pivote:0
 }
 GOTO(I1,function):
I15= { 
atom->function atom param block , c="(", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
 }
 GOTO(I1,type):
I16= { 
atom->type label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->type label param block , c="(", pivote:0
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:0
label->int , c="inherits", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:0
 }
 GOTO(I1,protocol):
I17= { 
atom->protocol label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->protocol label extends atom block , c="(", pivote:0
label->int , c="extends", pivote:-1
 }
 GOTO(I1,int):
I18= { 
label->int , c="(", pivote:0
 }
 GOTO(I1,():
I19= { 
atom->( high_level ) , c="(", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I1,atom):
I20= { 
exp->function atom param exp , c="$", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c=";", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
 }
 GOTO(I1,label):
I21= { 
atom->label , c="(", pivote:0
 }
 GOTO(I2,int):
I22= { 
label->int , c="{", pivote:0
label->int , c="(", pivote:0
label->int , c="inherits", pivote:0
 }
 GOTO(I2,label):
I23= { 
atom->type label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->type label inherits atom block , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:1
param->( structure ) , c="inherits", pivote:-1
param->( ) , c="inherits", pivote:-1
atom->type label block , c=";", pivote:1
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->type label param block , c=";", pivote:1
atom->type label inherits atom block , c=";", pivote:1
atom->type label param inherits atom param block , c=";", pivote:1
atom->type label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param block , c="+", pivote:1
atom->type label inherits atom block , c="+", pivote:1
atom->type label param inherits atom param block , c="+", pivote:1
atom->type label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param block , c="-", pivote:1
atom->type label inherits atom block , c="-", pivote:1
atom->type label param inherits atom param block , c="-", pivote:1
atom->type label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param block , c="*", pivote:1
atom->type label inherits atom block , c="*", pivote:1
atom->type label param inherits atom param block , c="*", pivote:1
atom->type label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param block , c="/", pivote:1
atom->type label inherits atom block , c="/", pivote:1
atom->type label param inherits atom param block , c="/", pivote:1
atom->type label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param block , c="in", pivote:1
atom->type label inherits atom block , c="in", pivote:1
atom->type label param inherits atom param block , c="in", pivote:1
 }
 GOTO(I3,int):
I24= { 
label->int , c="{", pivote:0
label->int , c="extends", pivote:0
 }
 GOTO(I3,label):
I25= { 
atom->protocol label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->protocol label extends atom block , c="(", pivote:1
atom->protocol label block , c=";", pivote:1
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:1
atom->protocol label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:1
atom->protocol label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:1
atom->protocol label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:1
atom->protocol label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:1
atom->protocol label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:1
 }
 GOTO(I4,int):
I26= { 
label->int , c="=", pivote:0
 }
 GOTO(I4,label):
I27= { 
var_declaration->let label , c="=", pivote:1
 }
 GOTO(I6,function):
I28= { 
high_level->function atom param high_level , c=")", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c=")", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
high_level->function atom param high_level , c=",", pivote:0
atom->function atom param block , c=",", pivote:0
 }
 GOTO(I6,type):
I29= { 
atom->type label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->type label param block , c="(", pivote:0
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:0
label->int , c="inherits", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:0
atom->type label block , c=")", pivote:0
atom->type label param block , c=")", pivote:0
atom->type label inherits atom block , c=")", pivote:0
atom->type label param inherits atom param block , c=")", pivote:0
atom->type label block , c="+", pivote:0
atom->type label param block , c="+", pivote:0
atom->type label inherits atom block , c="+", pivote:0
atom->type label param inherits atom param block , c="+", pivote:0
atom->type label block , c="-", pivote:0
atom->type label param block , c="-", pivote:0
atom->type label inherits atom block , c="-", pivote:0
atom->type label param inherits atom param block , c="-", pivote:0
atom->type label block , c="*", pivote:0
atom->type label param block , c="*", pivote:0
atom->type label inherits atom block , c="*", pivote:0
atom->type label param inherits atom param block , c="*", pivote:0
atom->type label block , c="/", pivote:0
atom->type label param block , c="/", pivote:0
atom->type label inherits atom block , c="/", pivote:0
atom->type label param inherits atom param block , c="/", pivote:0
atom->type label block , c="in", pivote:0
atom->type label param block , c="in", pivote:0
atom->type label inherits atom block , c="in", pivote:0
atom->type label param inherits atom param block , c="in", pivote:0
atom->type label block , c=",", pivote:0
atom->type label param block , c=",", pivote:0
atom->type label inherits atom block , c=",", pivote:0
atom->type label param inherits atom param block , c=",", pivote:0
 }
 GOTO(I6,protocol):
I30= { 
atom->protocol label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->protocol label extends atom block , c="(", pivote:0
label->int , c="extends", pivote:-1
atom->protocol label block , c=")", pivote:0
atom->protocol label extends atom block , c=")", pivote:0
atom->protocol label block , c="+", pivote:0
atom->protocol label extends atom block , c="+", pivote:0
atom->protocol label block , c="-", pivote:0
atom->protocol label extends atom block , c="-", pivote:0
atom->protocol label block , c="*", pivote:0
atom->protocol label extends atom block , c="*", pivote:0
atom->protocol label block , c="/", pivote:0
atom->protocol label extends atom block , c="/", pivote:0
atom->protocol label block , c="in", pivote:0
atom->protocol label extends atom block , c="in", pivote:0
atom->protocol label block , c=",", pivote:0
atom->protocol label extends atom block , c=",", pivote:0
 }
 GOTO(I6,int):
I31= { 
label->int , c="=", pivote:0
label->int , c="(", pivote:0
label->int , c=")", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="in", pivote:0
label->int , c=",", pivote:0
 }
 GOTO(I6,():
I32= { 
param->( structure ) , c="in", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="in", pivote:0
atom->( high_level ) , c="(", pivote:0
atom->( high_level ) , c=")", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="in", pivote:0
atom->( high_level ) , c=",", pivote:0
 }
 GOTO(I6,)):
I33= { 
param->( ) , c="in", pivote:1
 }
 GOTO(I6,sum_minus):
I34= { 
high_level->sum_minus , c=")", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
high_level->sum_minus , c="in", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:0
high_level->sum_minus , c=",", pivote:0
sum_minus->sum_minus + div_mult , c=",", pivote:0
sum_minus->sum_minus - div_mult , c=",", pivote:0
 }
 GOTO(I6,atom):
I35= { 
high_level->atom param => high_level , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c=")", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=")", pivote:0
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->atom param => high_level , c=",", pivote:0
div_mult->atom , c=",", pivote:0
atom->atom param => block , c=",", pivote:0
atom->atom param , c=",", pivote:0
param->( structure ) , c=",", pivote:-1
param->( ) , c=",", pivote:-1
 }
 GOTO(I6,div_mult):
I36= { 
sum_minus->div_mult , c=")", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
sum_minus->div_mult , c="in", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
sum_minus->div_mult , c=",", pivote:0
div_mult->div_mult * atom , c=",", pivote:0
div_mult->div_mult / atom , c=",", pivote:0
 }
 GOTO(I6,var_declaration):
I37= { 
high_level->var_declaration = high_level , c=")", pivote:0
high_level->var_declaration = high_level , c="in", pivote:0
high_level->var_declaration = high_level , c=",", pivote:0
 }
 GOTO(I6,high_level):
I38= { 
atom->( high_level ) , c="(", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
structure->high_level , c=")", pivote:0
structure->high_level , high_level , c=")", pivote:0
structure->high_level , c=",", pivote:0
structure->high_level , high_level , c=",", pivote:0
high_level->high_level in high_level , c=",", pivote:0
atom->( high_level ) , c=";", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="in", pivote:1
 }
 GOTO(I6,structure):
I39= { 
param->( structure ) , c="in", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
 }
 GOTO(I6,param):
I40= { 
high_level->param in high_level , c=")", pivote:0
high_level->param in high_level , c="in", pivote:0
high_level->param in high_level , c=",", pivote:0
 }
 GOTO(I6,label):
I41= { 
high_level->label = high_level , c=")", pivote:0
high_level->label = high_level , c="in", pivote:0
atom->label , c="(", pivote:0
atom->label , c=")", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="in", pivote:0
high_level->label = high_level , c=",", pivote:0
atom->label , c=",", pivote:0
 }
 GOTO(I8,+):
I42= { 
sum_minus->sum_minus + div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I8,-):
I43= { 
sum_minus->sum_minus - div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I9,():
I44= { 
param->( structure ) , c="=>", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="=>", pivote:0
param->( structure ) , c="(", pivote:0
param->( ) , c="(", pivote:0
param->( structure ) , c=";", pivote:0
param->( ) , c=";", pivote:0
param->( structure ) , c="+", pivote:0
param->( ) , c="+", pivote:0
param->( structure ) , c="-", pivote:0
param->( ) , c="-", pivote:0
param->( structure ) , c="*", pivote:0
param->( ) , c="*", pivote:0
param->( structure ) , c="/", pivote:0
param->( ) , c="/", pivote:0
param->( structure ) , c="in", pivote:0
param->( ) , c="in", pivote:0
 }
 GOTO(I9,param):
I45= { 
exp->atom param => exp , c="$", pivote:1
high_level->atom param => high_level , c=";", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
 }
 GOTO(I10,*):
I46= { 
div_mult->div_mult * atom , c=";", pivote:1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I10,/):
I47= { 
div_mult->div_mult / atom , c=";", pivote:1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I11,=):
I48= { 
high_level->var_declaration = high_level , c=";", pivote:1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:1
 }
 GOTO(I12,in):
I49= { 
high_level->high_level in high_level , c=";", pivote:1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:1
 }
 GOTO(I12,;):
I50= { 
exp->high_level ; , c="$", pivote:1
 }
 GOTO(I13,in):
I51= { 
high_level->param in high_level , c=";", pivote:1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:1
 }
 GOTO(I14,=):
I52= { 
high_level->label = high_level , c=";", pivote:1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:1
 }
 GOTO(I15,atom):
I53= { 
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
 }
 GOTO(I16,label):
I54= { 
atom->type label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->type label inherits atom block , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:1
param->( structure ) , c="inherits", pivote:-1
param->( ) , c="inherits", pivote:-1
 }
 GOTO(I17,label):
I55= { 
atom->protocol label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->protocol label extends atom block , c="(", pivote:1
 }
 GOTO(I19,function):
I56= { 
high_level->function atom param high_level , c=")", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c=")", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
 }
 GOTO(I19,type):
I57= { 
atom->type label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->type label param block , c="(", pivote:0
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:0
label->int , c="inherits", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:0
atom->type label block , c=")", pivote:0
atom->type label param block , c=")", pivote:0
atom->type label inherits atom block , c=")", pivote:0
atom->type label param inherits atom param block , c=")", pivote:0
atom->type label block , c="+", pivote:0
atom->type label param block , c="+", pivote:0
atom->type label inherits atom block , c="+", pivote:0
atom->type label param inherits atom param block , c="+", pivote:0
atom->type label block , c="-", pivote:0
atom->type label param block , c="-", pivote:0
atom->type label inherits atom block , c="-", pivote:0
atom->type label param inherits atom param block , c="-", pivote:0
atom->type label block , c="*", pivote:0
atom->type label param block , c="*", pivote:0
atom->type label inherits atom block , c="*", pivote:0
atom->type label param inherits atom param block , c="*", pivote:0
atom->type label block , c="/", pivote:0
atom->type label param block , c="/", pivote:0
atom->type label inherits atom block , c="/", pivote:0
atom->type label param inherits atom param block , c="/", pivote:0
atom->type label block , c="in", pivote:0
atom->type label param block , c="in", pivote:0
atom->type label inherits atom block , c="in", pivote:0
atom->type label param inherits atom param block , c="in", pivote:0
 }
 GOTO(I19,protocol):
I58= { 
atom->protocol label block , c="(", pivote:0
label->int , c="{", pivote:-1
atom->protocol label extends atom block , c="(", pivote:0
label->int , c="extends", pivote:-1
atom->protocol label block , c=")", pivote:0
atom->protocol label extends atom block , c=")", pivote:0
atom->protocol label block , c="+", pivote:0
atom->protocol label extends atom block , c="+", pivote:0
atom->protocol label block , c="-", pivote:0
atom->protocol label extends atom block , c="-", pivote:0
atom->protocol label block , c="*", pivote:0
atom->protocol label extends atom block , c="*", pivote:0
atom->protocol label block , c="/", pivote:0
atom->protocol label extends atom block , c="/", pivote:0
atom->protocol label block , c="in", pivote:0
atom->protocol label extends atom block , c="in", pivote:0
 }
 GOTO(I19,int):
I59= { 
label->int , c="=", pivote:0
label->int , c="(", pivote:0
label->int , c=")", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="in", pivote:0
 }
 GOTO(I19,():
I60= { 
param->( structure ) , c="in", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="in", pivote:0
atom->( high_level ) , c="(", pivote:0
atom->( high_level ) , c=")", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="in", pivote:0
 }
 GOTO(I19,sum_minus):
I61= { 
high_level->sum_minus , c=")", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
high_level->sum_minus , c="in", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:0
 }
 GOTO(I19,atom):
I62= { 
high_level->atom param => high_level , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c=")", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=")", pivote:0
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I19,div_mult):
I63= { 
sum_minus->div_mult , c=")", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
sum_minus->div_mult , c="in", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I19,var_declaration):
I64= { 
high_level->var_declaration = high_level , c=")", pivote:0
high_level->var_declaration = high_level , c="in", pivote:0
 }
 GOTO(I19,high_level):
I65= { 
atom->( high_level ) , c="(", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
 }
 GOTO(I19,param):
I66= { 
high_level->param in high_level , c=")", pivote:0
high_level->param in high_level , c="in", pivote:0
 }
 GOTO(I19,label):
I67= { 
high_level->label = high_level , c=")", pivote:0
high_level->label = high_level , c="in", pivote:0
atom->label , c="(", pivote:0
atom->label , c=")", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="in", pivote:0
 }
 GOTO(I20,():
I68= { 
param->( structure ) , c="int", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( structure ) , c="(", pivote:0
param->( structure ) , c="protocol", pivote:0
param->( structure ) , c="type", pivote:0
param->( structure ) , c="function", pivote:0
param->( structure ) , c="let", pivote:0
param->( ) , c="int", pivote:0
param->( ) , c="(", pivote:0
param->( ) , c="protocol", pivote:0
param->( ) , c="type", pivote:0
param->( ) , c="function", pivote:0
param->( ) , c="let", pivote:0
param->( structure ) , c="=>", pivote:0
param->( ) , c="=>", pivote:0
param->( structure ) , c="{", pivote:0
param->( ) , c="{", pivote:0
 }
 GOTO(I20,param):
I69= { 
exp->function atom param exp , c="$", pivote:2
exp->high_level ; , c="$", pivote:-1
exp->function atom param exp , c="$", pivote:-1
exp->atom param => exp , c="$", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c=";", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I23,inherits):
I70= { 
atom->type label inherits atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label inherits atom block , c=";", pivote:2
atom->type label inherits atom block , c="+", pivote:2
atom->type label inherits atom block , c="-", pivote:2
atom->type label inherits atom block , c="*", pivote:2
atom->type label inherits atom block , c="/", pivote:2
atom->type label inherits atom block , c="in", pivote:2
 }
 GOTO(I23,():
I71= { 
param->( structure ) , c="{", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="{", pivote:0
param->( structure ) , c="inherits", pivote:0
param->( ) , c="inherits", pivote:0
 }
 GOTO(I23,{):
I72= { 
block->{ exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->{ } , c="(", pivote:0
block->{ exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->{ } , c="{", pivote:0
block->{ exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->{ exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->{ exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->{ } , c="int", pivote:0
block->{ } , c="protocol", pivote:0
block->{ } , c="type", pivote:0
block->{ } , c="function", pivote:0
block->{ } , c="let", pivote:0
block->{ exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->{ } , c="}", pivote:0
block->{ exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->{ } , c=";", pivote:0
block->{ exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->{ } , c="+", pivote:0
block->{ exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->{ } , c="-", pivote:0
block->{ exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->{ } , c="*", pivote:0
block->{ exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->{ } , c="/", pivote:0
block->{ exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->{ } , c="in", pivote:0
 }
 GOTO(I23,block):
I73= { 
atom->type label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label block , c=";", pivote:2
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->type label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I23,param):
I74= { 
atom->type label param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:2
atom->type label param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:2
atom->type label param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:2
atom->type label param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:2
atom->type label param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:2
atom->type label param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:2
atom->type label param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:2
 }
 GOTO(I25,extends):
I75= { 
atom->protocol label extends atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->protocol label extends atom block , c=";", pivote:2
atom->protocol label extends atom block , c="+", pivote:2
atom->protocol label extends atom block , c="-", pivote:2
atom->protocol label extends atom block , c="*", pivote:2
atom->protocol label extends atom block , c="/", pivote:2
atom->protocol label extends atom block , c="in", pivote:2
 }
 GOTO(I25,block):
I76= { 
atom->protocol label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label block , c=";", pivote:2
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->protocol label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I28,atom):
I77= { 
high_level->function atom param high_level , c=")", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->function atom param block , c=")", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
high_level->function atom param high_level , c=",", pivote:1
atom->function atom param block , c=",", pivote:1
 }
 GOTO(I29,label):
I78= { 
atom->type label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->type label inherits atom block , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:1
param->( structure ) , c="inherits", pivote:-1
param->( ) , c="inherits", pivote:-1
atom->type label block , c=")", pivote:1
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param block , c=")", pivote:1
atom->type label inherits atom block , c=")", pivote:1
atom->type label param inherits atom param block , c=")", pivote:1
atom->type label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param block , c="+", pivote:1
atom->type label inherits atom block , c="+", pivote:1
atom->type label param inherits atom param block , c="+", pivote:1
atom->type label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param block , c="-", pivote:1
atom->type label inherits atom block , c="-", pivote:1
atom->type label param inherits atom param block , c="-", pivote:1
atom->type label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param block , c="*", pivote:1
atom->type label inherits atom block , c="*", pivote:1
atom->type label param inherits atom param block , c="*", pivote:1
atom->type label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param block , c="/", pivote:1
atom->type label inherits atom block , c="/", pivote:1
atom->type label param inherits atom param block , c="/", pivote:1
atom->type label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param block , c="in", pivote:1
atom->type label inherits atom block , c="in", pivote:1
atom->type label param inherits atom param block , c="in", pivote:1
atom->type label block , c=",", pivote:1
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
atom->type label param block , c=",", pivote:1
atom->type label inherits atom block , c=",", pivote:1
atom->type label param inherits atom param block , c=",", pivote:1
 }
 GOTO(I30,label):
I79= { 
atom->protocol label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->protocol label extends atom block , c="(", pivote:1
atom->protocol label block , c=")", pivote:1
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:1
atom->protocol label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:1
atom->protocol label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:1
atom->protocol label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:1
atom->protocol label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:1
atom->protocol label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:1
atom->protocol label block , c=",", pivote:1
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:1
 }
 GOTO(I32,high_level):
I80= { 
structure->high_level , c=")", pivote:0
structure->high_level , high_level , c=")", pivote:0
structure->high_level , c=",", pivote:0
structure->high_level , high_level , c=",", pivote:0
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c=",", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="(", pivote:1
atom->( high_level ) , c=")", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="in", pivote:1
atom->( high_level ) , c=",", pivote:1
 }
 GOTO(I34,+):
I81= { 
sum_minus->sum_minus + div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I34,-):
I82= { 
sum_minus->sum_minus - div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I35,():
I83= { 
param->( structure ) , c="=>", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="=>", pivote:0
param->( structure ) , c="(", pivote:0
param->( ) , c="(", pivote:0
param->( structure ) , c=")", pivote:0
param->( ) , c=")", pivote:0
param->( structure ) , c="+", pivote:0
param->( ) , c="+", pivote:0
param->( structure ) , c="-", pivote:0
param->( ) , c="-", pivote:0
param->( structure ) , c="*", pivote:0
param->( ) , c="*", pivote:0
param->( structure ) , c="/", pivote:0
param->( ) , c="/", pivote:0
param->( structure ) , c="in", pivote:0
param->( ) , c="in", pivote:0
param->( structure ) , c=",", pivote:0
param->( ) , c=",", pivote:0
 }
 GOTO(I35,param):
I84= { 
high_level->atom param => high_level , c=")", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c=")", pivote:1
atom->atom param , c=")", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
high_level->atom param => high_level , c=",", pivote:1
atom->atom param => block , c=",", pivote:1
atom->atom param , c=",", pivote:1
 }
 GOTO(I36,*):
I85= { 
div_mult->div_mult * atom , c=")", pivote:1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
div_mult->div_mult * atom , c=",", pivote:1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I36,/):
I86= { 
div_mult->div_mult / atom , c=")", pivote:1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
div_mult->div_mult / atom , c=",", pivote:1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I37,=):
I87= { 
high_level->var_declaration = high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:1
high_level->var_declaration = high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I38,in):
I88= { 
high_level->high_level in high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:1
high_level->high_level in high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I38,,):
I89= { 
structure->high_level , high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
structure->high_level , high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I38,)):
I90= { 
atom->( high_level ) , c="(", pivote:2
atom->( high_level ) , c=";", pivote:2
atom->( high_level ) , c="+", pivote:2
atom->( high_level ) , c="-", pivote:2
atom->( high_level ) , c="*", pivote:2
atom->( high_level ) , c="/", pivote:2
atom->( high_level ) , c="in", pivote:2
 }
 GOTO(I39,,):
I91= { 
structure->structure , high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
structure->structure , high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I39,)):
I92= { 
param->( structure ) , c="in", pivote:2
 }
 GOTO(I40,in):
I93= { 
high_level->param in high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:1
high_level->param in high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I41,=):
I94= { 
high_level->label = high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:1
high_level->label = high_level , c=",", pivote:1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
 }
 GOTO(I42,function):
I95= { 
atom->function atom param block , c=";", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="in", pivote:0
 }
 GOTO(I42,int):
I96= { 
label->int , c=";", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="(", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="in", pivote:0
 }
 GOTO(I42,():
I97= { 
atom->( high_level ) , c=";", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="(", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="in", pivote:0
 }
 GOTO(I42,atom):
I98= { 
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c="+", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->atom , c="-", pivote:0
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I42,div_mult):
I99= { 
sum_minus->sum_minus + div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I42,label):
I100= { 
atom->label , c=";", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="(", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="in", pivote:0
 }
 GOTO(I43,div_mult):
I101= { 
sum_minus->sum_minus - div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I44,)):
I102= { 
param->( ) , c="=>", pivote:1
param->( ) , c="(", pivote:1
param->( ) , c=";", pivote:1
param->( ) , c="+", pivote:1
param->( ) , c="-", pivote:1
param->( ) , c="*", pivote:1
param->( ) , c="/", pivote:1
param->( ) , c="in", pivote:1
 }
 GOTO(I44,high_level):
I103= { 
structure->high_level , c=")", pivote:0
structure->high_level , high_level , c=")", pivote:0
structure->high_level , c=",", pivote:0
structure->high_level , high_level , c=",", pivote:0
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c=",", pivote:0
high_level->high_level in high_level , c="in", pivote:0
 }
 GOTO(I44,structure):
I104= { 
param->( structure ) , c="=>", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="(", pivote:1
param->( structure ) , c=";", pivote:1
param->( structure ) , c="+", pivote:1
param->( structure ) , c="-", pivote:1
param->( structure ) , c="*", pivote:1
param->( structure ) , c="/", pivote:1
param->( structure ) , c="in", pivote:1
 }
 GOTO(I45,=>):
I105= { 
exp->atom param => exp , c="$", pivote:2
exp->high_level ; , c="$", pivote:-1
exp->function atom param exp , c="$", pivote:-1
exp->atom param => exp , c="$", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c=";", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I46,atom):
I106= { 
div_mult->div_mult * atom , c=";", pivote:2
atom->atom param => block , c=";", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I47,atom):
I107= { 
div_mult->div_mult / atom , c=";", pivote:2
atom->atom param => block , c=";", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I48,function):
I108= { 
high_level->function atom param high_level , c=";", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
 }
 GOTO(I48,atom):
I109= { 
high_level->atom param => high_level , c=";", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I48,high_level):
I110= { 
high_level->var_declaration = high_level , c=";", pivote:2
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->var_declaration = high_level , c="in", pivote:2
 }
 GOTO(I49,high_level):
I111= { 
high_level->high_level in high_level , c=";", pivote:2
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->high_level in high_level , c="in", pivote:2
 }
 GOTO(I51,high_level):
I112= { 
high_level->param in high_level , c=";", pivote:2
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->param in high_level , c="in", pivote:2
 }
 GOTO(I52,high_level):
I113= { 
high_level->label = high_level , c=";", pivote:2
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->label = high_level , c="in", pivote:2
 }
 GOTO(I53,():
I114= { 
param->( structure ) , c="{", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="{", pivote:0
param->( structure ) , c="=>", pivote:0
param->( ) , c="=>", pivote:0
param->( structure ) , c="(", pivote:0
param->( ) , c="(", pivote:0
 }
 GOTO(I53,param):
I115= { 
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
 }
 GOTO(I54,inherits):
I116= { 
atom->type label inherits atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
 }
 GOTO(I54,{):
I117= { 
block->{ exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->{ } , c="(", pivote:0
block->{ exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->{ } , c="{", pivote:0
block->{ exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->{ exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->{ exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->{ } , c="int", pivote:0
block->{ } , c="protocol", pivote:0
block->{ } , c="type", pivote:0
block->{ } , c="function", pivote:0
block->{ } , c="let", pivote:0
block->{ exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->{ } , c="}", pivote:0
 }
 GOTO(I54,block):
I118= { 
atom->type label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I54,param):
I119= { 
atom->type label param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:2
 }
 GOTO(I55,extends):
I120= { 
atom->protocol label extends atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
 }
 GOTO(I55,block):
I121= { 
atom->protocol label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I56,atom):
I122= { 
high_level->function atom param high_level , c=")", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->function atom param block , c=")", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
 }
 GOTO(I57,label):
I123= { 
atom->type label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->type label inherits atom block , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:1
param->( structure ) , c="inherits", pivote:-1
param->( ) , c="inherits", pivote:-1
atom->type label block , c=")", pivote:1
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param block , c=")", pivote:1
atom->type label inherits atom block , c=")", pivote:1
atom->type label param inherits atom param block , c=")", pivote:1
atom->type label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param block , c="+", pivote:1
atom->type label inherits atom block , c="+", pivote:1
atom->type label param inherits atom param block , c="+", pivote:1
atom->type label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param block , c="-", pivote:1
atom->type label inherits atom block , c="-", pivote:1
atom->type label param inherits atom param block , c="-", pivote:1
atom->type label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param block , c="*", pivote:1
atom->type label inherits atom block , c="*", pivote:1
atom->type label param inherits atom param block , c="*", pivote:1
atom->type label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param block , c="/", pivote:1
atom->type label inherits atom block , c="/", pivote:1
atom->type label param inherits atom param block , c="/", pivote:1
atom->type label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param block , c="in", pivote:1
atom->type label inherits atom block , c="in", pivote:1
atom->type label param inherits atom param block , c="in", pivote:1
 }
 GOTO(I58,label):
I124= { 
atom->protocol label block , c="(", pivote:1
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->protocol label extends atom block , c="(", pivote:1
atom->protocol label block , c=")", pivote:1
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:1
atom->protocol label block , c="+", pivote:1
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:1
atom->protocol label block , c="-", pivote:1
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:1
atom->protocol label block , c="*", pivote:1
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:1
atom->protocol label block , c="/", pivote:1
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:1
atom->protocol label block , c="in", pivote:1
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:1
 }
 GOTO(I60,high_level):
I125= { 
structure->high_level , c=")", pivote:0
structure->high_level , high_level , c=")", pivote:0
structure->high_level , c=",", pivote:0
structure->high_level , high_level , c=",", pivote:0
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c=",", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="(", pivote:1
atom->( high_level ) , c=")", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="in", pivote:1
 }
 GOTO(I61,+):
I126= { 
sum_minus->sum_minus + div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I61,-):
I127= { 
sum_minus->sum_minus - div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I62,():
I128= { 
param->( structure ) , c="=>", pivote:0
structure->structure , high_level , c=")", pivote:-1
structure->high_level , c=")", pivote:-1
structure->high_level , high_level , c=")", pivote:-1
structure->structure , high_level , c=",", pivote:-1
structure->high_level , c=",", pivote:-1
structure->high_level , high_level , c=",", pivote:-1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c=",", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
param->( ) , c="=>", pivote:0
param->( structure ) , c="(", pivote:0
param->( ) , c="(", pivote:0
param->( structure ) , c=")", pivote:0
param->( ) , c=")", pivote:0
param->( structure ) , c="+", pivote:0
param->( ) , c="+", pivote:0
param->( structure ) , c="-", pivote:0
param->( ) , c="-", pivote:0
param->( structure ) , c="*", pivote:0
param->( ) , c="*", pivote:0
param->( structure ) , c="/", pivote:0
param->( ) , c="/", pivote:0
param->( structure ) , c="in", pivote:0
param->( ) , c="in", pivote:0
 }
 GOTO(I62,param):
I129= { 
high_level->atom param => high_level , c=")", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c=")", pivote:1
atom->atom param , c=")", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
 }
 GOTO(I63,*):
I130= { 
div_mult->div_mult * atom , c=")", pivote:1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I63,/):
I131= { 
div_mult->div_mult / atom , c=")", pivote:1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
label->int , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
label->int , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
label->int , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="in", pivote:-1
 }
 GOTO(I64,=):
I132= { 
high_level->var_declaration = high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:1
 }
 GOTO(I65,in):
I133= { 
high_level->high_level in high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:1
 }
 GOTO(I65,)):
I134= { 
atom->( high_level ) , c="(", pivote:2
 }
 GOTO(I66,in):
I135= { 
high_level->param in high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:1
 }
 GOTO(I67,=):
I136= { 
high_level->label = high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:1
 }
 GOTO(I68,)):
I137= { 
param->( ) , c="int", pivote:1
param->( ) , c="(", pivote:1
param->( ) , c="protocol", pivote:1
param->( ) , c="type", pivote:1
param->( ) , c="function", pivote:1
param->( ) , c="let", pivote:1
param->( ) , c="=>", pivote:1
param->( ) , c="{", pivote:1
 }
 GOTO(I68,structure):
I138= { 
param->( structure ) , c="int", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="(", pivote:1
param->( structure ) , c="protocol", pivote:1
param->( structure ) , c="type", pivote:1
param->( structure ) , c="function", pivote:1
param->( structure ) , c="let", pivote:1
param->( structure ) , c="=>", pivote:1
param->( structure ) , c="{", pivote:1
 }
 GOTO(I69,=>):
I139= { 
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
 }
 GOTO(I69,exp):
I140= { 
exp->function atom param exp , c="$", pivote:3
 }
 GOTO(I69,block):
I141= { 
atom->function atom param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->function atom param block , c=";", pivote:3
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->function atom param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->function atom param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->function atom param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->function atom param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->function atom param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I69,high_level):
I142= { 
exp->high_level ; , c="$", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c=";", pivote:3
high_level->function atom param high_level , c="in", pivote:3
 }
 GOTO(I70,function):
I143= { 
atom->function atom param block , c="{", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->function atom param block , c="(", pivote:0
 }
 GOTO(I70,type):
I144= { 
atom->type label block , c="{", pivote:0
label->int , c="{", pivote:-1
atom->type label param block , c="{", pivote:0
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="{", pivote:0
label->int , c="inherits", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:0
atom->type label block , c="(", pivote:0
atom->type label param block , c="(", pivote:0
atom->type label inherits atom block , c="(", pivote:0
atom->type label param inherits atom param block , c="(", pivote:0
 }
 GOTO(I70,protocol):
I145= { 
atom->protocol label block , c="{", pivote:0
label->int , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:0
label->int , c="extends", pivote:-1
atom->protocol label block , c="(", pivote:0
atom->protocol label extends atom block , c="(", pivote:0
 }
 GOTO(I70,int):
I146= { 
label->int , c="{", pivote:0
label->int , c="(", pivote:0
 }
 GOTO(I70,():
I147= { 
atom->( high_level ) , c="{", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->( high_level ) , c="(", pivote:0
 }
 GOTO(I70,atom):
I148= { 
atom->type label inherits atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label inherits atom block , c=";", pivote:3
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->type label inherits atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label inherits atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label inherits atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label inherits atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label inherits atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I70,label):
I149= { 
atom->label , c="{", pivote:0
atom->label , c="(", pivote:0
 }
 GOTO(I71,)):
I150= { 
param->( ) , c="{", pivote:1
param->( ) , c="inherits", pivote:1
 }
 GOTO(I71,structure):
I151= { 
param->( structure ) , c="{", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="inherits", pivote:1
 }
 GOTO(I72,function):
I152= { 
exp->function atom param exp , c="(", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c=";", pivote:0
atom->function atom param block , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
exp->function atom param exp , c="{", pivote:0
exp->function atom param exp , c="int", pivote:0
exp->function atom param exp , c="protocol", pivote:0
exp->function atom param exp , c="type", pivote:0
exp->function atom param exp , c="function", pivote:0
exp->function atom param exp , c="let", pivote:0
exp->function atom param exp , c="}", pivote:0
exp->function atom param exp , c=";", pivote:0
exp->function atom param exp , c="+", pivote:0
exp->function atom param exp , c="-", pivote:0
exp->function atom param exp , c="*", pivote:0
exp->function atom param exp , c="/", pivote:0
exp->function atom param exp , c="in", pivote:0
 }
 GOTO(I72,}):
I153= { 
block->{ } , c="(", pivote:1
block->{ } , c="{", pivote:1
block->{ } , c="int", pivote:1
block->{ } , c="protocol", pivote:1
block->{ } , c="type", pivote:1
block->{ } , c="function", pivote:1
block->{ } , c="let", pivote:1
block->{ } , c="}", pivote:1
block->{ } , c=";", pivote:1
block->{ } , c="+", pivote:1
block->{ } , c="-", pivote:1
block->{ } , c="*", pivote:1
block->{ } , c="/", pivote:1
block->{ } , c="in", pivote:1
 }
 GOTO(I72,exp):
I154= { 
block->{ exp , c="(", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="int", pivote:1
block->{ exp , c="protocol", pivote:1
block->{ exp , c="type", pivote:1
block->{ exp , c="function", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="}", pivote:1
block->{ exp , c=";", pivote:1
block->{ exp , c="+", pivote:1
block->{ exp , c="-", pivote:1
block->{ exp , c="*", pivote:1
block->{ exp , c="/", pivote:1
block->{ exp , c="in", pivote:1
 }
 GOTO(I72,atom):
I155= { 
exp->atom param => exp , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c=";", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:0
exp->atom param => exp , c="int", pivote:0
exp->atom param => exp , c="protocol", pivote:0
exp->atom param => exp , c="type", pivote:0
exp->atom param => exp , c="function", pivote:0
exp->atom param => exp , c="let", pivote:0
exp->atom param => exp , c="}", pivote:0
exp->atom param => exp , c=";", pivote:0
exp->atom param => exp , c="+", pivote:0
exp->atom param => exp , c="-", pivote:0
exp->atom param => exp , c="*", pivote:0
exp->atom param => exp , c="/", pivote:0
exp->atom param => exp , c="in", pivote:0
 }
 GOTO(I72,high_level):
I156= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=";", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I73,}):
I157= { 
block->block } , c="(", pivote:1
block->block } , c="{", pivote:1
block->block } , c="int", pivote:1
block->block } , c="protocol", pivote:1
block->block } , c="type", pivote:1
block->block } , c="function", pivote:1
block->block } , c="let", pivote:1
block->block } , c="}", pivote:1
block->block } , c=";", pivote:1
block->block } , c="+", pivote:1
block->block } , c="-", pivote:1
block->block } , c="*", pivote:1
block->block } , c="/", pivote:1
block->block } , c="in", pivote:1
 }
 GOTO(I73,exp):
I158= { 
block->block exp , c="(", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="int", pivote:1
block->block exp , c="protocol", pivote:1
block->block exp , c="type", pivote:1
block->block exp , c="function", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="}", pivote:1
block->block exp , c=";", pivote:1
block->block exp , c="+", pivote:1
block->block exp , c="-", pivote:1
block->block exp , c="*", pivote:1
block->block exp , c="/", pivote:1
block->block exp , c="in", pivote:1
 }
 GOTO(I73,block):
I159= { 
block->block block , c="(", pivote:1
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
block->block block , c="{", pivote:1
block->block block , c="int", pivote:1
block->block block , c="protocol", pivote:1
block->block block , c="type", pivote:1
block->block block , c="function", pivote:1
block->block block , c="let", pivote:1
block->block block , c="}", pivote:1
block->block block , c=";", pivote:1
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
block->block block , c="+", pivote:1
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
block->block block , c="-", pivote:1
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
block->block block , c="*", pivote:1
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
block->block block , c="/", pivote:1
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
block->block block , c="in", pivote:1
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I74,inherits):
I160= { 
atom->type label param inherits atom param block , c="(", pivote:3
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:3
atom->type label param inherits atom param block , c="+", pivote:3
atom->type label param inherits atom param block , c="-", pivote:3
atom->type label param inherits atom param block , c="*", pivote:3
atom->type label param inherits atom param block , c="/", pivote:3
atom->type label param inherits atom param block , c="in", pivote:3
 }
 GOTO(I74,block):
I161= { 
atom->type label param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param block , c=";", pivote:3
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->type label param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I75,atom):
I162= { 
atom->protocol label extends atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->protocol label extends atom block , c=";", pivote:3
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->protocol label extends atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I77,param):
I163= { 
high_level->function atom param high_level , c=")", pivote:2
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->function atom param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
high_level->function atom param high_level , c=",", pivote:2
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
atom->function atom param block , c=",", pivote:2
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I78,inherits):
I164= { 
atom->type label inherits atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label inherits atom block , c=")", pivote:2
atom->type label inherits atom block , c="+", pivote:2
atom->type label inherits atom block , c="-", pivote:2
atom->type label inherits atom block , c="*", pivote:2
atom->type label inherits atom block , c="/", pivote:2
atom->type label inherits atom block , c="in", pivote:2
atom->type label inherits atom block , c=",", pivote:2
 }
 GOTO(I78,{):
I165= { 
block->{ exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->{ } , c="(", pivote:0
block->{ exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->{ } , c="{", pivote:0
block->{ exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->{ exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->{ exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->{ } , c="int", pivote:0
block->{ } , c="protocol", pivote:0
block->{ } , c="type", pivote:0
block->{ } , c="function", pivote:0
block->{ } , c="let", pivote:0
block->{ exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->{ } , c="}", pivote:0
block->{ exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->{ } , c=")", pivote:0
block->{ exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->{ } , c="+", pivote:0
block->{ exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->{ } , c="-", pivote:0
block->{ exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->{ } , c="*", pivote:0
block->{ exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->{ } , c="/", pivote:0
block->{ exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->{ } , c="in", pivote:0
block->{ exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->{ } , c=",", pivote:0
 }
 GOTO(I78,block):
I166= { 
atom->type label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label block , c=")", pivote:2
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->type label block , c=",", pivote:2
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I78,param):
I167= { 
atom->type label param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:2
atom->type label param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:2
atom->type label param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:2
atom->type label param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:2
atom->type label param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:2
atom->type label param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:2
atom->type label param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:2
atom->type label param block , c=",", pivote:2
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:2
 }
 GOTO(I79,extends):
I168= { 
atom->protocol label extends atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->protocol label extends atom block , c=")", pivote:2
atom->protocol label extends atom block , c="+", pivote:2
atom->protocol label extends atom block , c="-", pivote:2
atom->protocol label extends atom block , c="*", pivote:2
atom->protocol label extends atom block , c="/", pivote:2
atom->protocol label extends atom block , c="in", pivote:2
atom->protocol label extends atom block , c=",", pivote:2
 }
 GOTO(I79,block):
I169= { 
atom->protocol label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label block , c=")", pivote:2
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->protocol label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->protocol label block , c=",", pivote:2
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I80,)):
I170= { 
atom->( high_level ) , c="(", pivote:2
atom->( high_level ) , c=")", pivote:2
atom->( high_level ) , c="+", pivote:2
atom->( high_level ) , c="-", pivote:2
atom->( high_level ) , c="*", pivote:2
atom->( high_level ) , c="/", pivote:2
atom->( high_level ) , c="in", pivote:2
atom->( high_level ) , c=",", pivote:2
 }
 GOTO(I81,function):
I171= { 
atom->function atom param block , c=")", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="in", pivote:0
atom->function atom param block , c=",", pivote:0
 }
 GOTO(I81,int):
I172= { 
label->int , c=")", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="(", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="in", pivote:0
label->int , c=",", pivote:0
 }
 GOTO(I81,():
I173= { 
atom->( high_level ) , c=")", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="(", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="in", pivote:0
atom->( high_level ) , c=",", pivote:0
 }
 GOTO(I81,atom):
I174= { 
div_mult->atom , c=")", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c="+", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->atom , c="-", pivote:0
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
div_mult->atom , c=",", pivote:0
atom->atom param => block , c=",", pivote:0
atom->atom param , c=",", pivote:0
param->( structure ) , c=",", pivote:-1
param->( ) , c=",", pivote:-1
 }
 GOTO(I81,div_mult):
I175= { 
sum_minus->sum_minus + div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
sum_minus->sum_minus + div_mult , c=",", pivote:2
div_mult->div_mult * atom , c=",", pivote:0
div_mult->div_mult / atom , c=",", pivote:0
 }
 GOTO(I81,label):
I176= { 
atom->label , c=")", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="(", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="in", pivote:0
atom->label , c=",", pivote:0
 }
 GOTO(I82,div_mult):
I177= { 
sum_minus->sum_minus - div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
sum_minus->sum_minus - div_mult , c=",", pivote:2
div_mult->div_mult * atom , c=",", pivote:0
div_mult->div_mult / atom , c=",", pivote:0
 }
 GOTO(I83,)):
I178= { 
param->( ) , c="=>", pivote:1
param->( ) , c="(", pivote:1
param->( ) , c=")", pivote:1
param->( ) , c="+", pivote:1
param->( ) , c="-", pivote:1
param->( ) , c="*", pivote:1
param->( ) , c="/", pivote:1
param->( ) , c="in", pivote:1
param->( ) , c=",", pivote:1
 }
 GOTO(I83,structure):
I179= { 
param->( structure ) , c="=>", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="(", pivote:1
param->( structure ) , c=")", pivote:1
param->( structure ) , c="+", pivote:1
param->( structure ) , c="-", pivote:1
param->( structure ) , c="*", pivote:1
param->( structure ) , c="/", pivote:1
param->( structure ) , c="in", pivote:1
param->( structure ) , c=",", pivote:1
 }
 GOTO(I84,=>):
I180= { 
high_level->atom param => high_level , c=")", pivote:2
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
high_level->atom param => high_level , c=",", pivote:2
high_level->sum_minus , c=",", pivote:-1
high_level->label = high_level , c=",", pivote:-1
high_level->var_declaration = high_level , c=",", pivote:-1
high_level->param in high_level , c=",", pivote:-1
high_level->high_level in high_level , c=",", pivote:-1
high_level->function atom param high_level , c=",", pivote:-1
high_level->atom param => high_level , c=",", pivote:-1
sum_minus->sum_minus + div_mult , c=",", pivote:-1
sum_minus->sum_minus - div_mult , c=",", pivote:-1
sum_minus->div_mult , c=",", pivote:-1
div_mult->div_mult * atom , c=",", pivote:-1
div_mult->div_mult / atom , c=",", pivote:-1
div_mult->atom , c=",", pivote:-1
atom->label , c=",", pivote:-1
atom->( high_level ) , c=",", pivote:-1
atom->protocol label block , c=",", pivote:-1
atom->protocol label extends atom block , c=",", pivote:-1
atom->type label block , c=",", pivote:-1
atom->type label param block , c=",", pivote:-1
atom->type label inherits atom block , c=",", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:-1
atom->function atom param block , c=",", pivote:-1
atom->atom param => block , c=",", pivote:-1
atom->atom param , c=",", pivote:-1
label->int , c=",", pivote:-1
atom->atom param => block , c=",", pivote:2
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I85,atom):
I181= { 
div_mult->div_mult * atom , c=")", pivote:2
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
div_mult->div_mult * atom , c=",", pivote:2
atom->atom param => block , c=",", pivote:0
atom->atom param , c=",", pivote:0
param->( structure ) , c=",", pivote:-1
param->( ) , c=",", pivote:-1
 }
 GOTO(I86,atom):
I182= { 
div_mult->div_mult / atom , c=")", pivote:2
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
div_mult->div_mult / atom , c=",", pivote:2
atom->atom param => block , c=",", pivote:0
atom->atom param , c=",", pivote:0
param->( structure ) , c=",", pivote:-1
param->( ) , c=",", pivote:-1
 }
 GOTO(I87,high_level):
I183= { 
high_level->var_declaration = high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->var_declaration = high_level , c="in", pivote:2
high_level->var_declaration = high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I88,high_level):
I184= { 
high_level->high_level in high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->high_level in high_level , c="in", pivote:2
high_level->high_level in high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I89,high_level):
I185= { 
structure->high_level , high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
structure->high_level , high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I91,high_level):
I186= { 
structure->structure , high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
structure->structure , high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I93,high_level):
I187= { 
high_level->param in high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->param in high_level , c="in", pivote:2
high_level->param in high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I94,high_level):
I188= { 
high_level->label = high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->label = high_level , c="in", pivote:2
high_level->label = high_level , c=",", pivote:2
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I95,atom):
I189= { 
atom->function atom param block , c=";", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="(", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="in", pivote:1
 }
 GOTO(I97,high_level):
I190= { 
atom->( high_level ) , c=";", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="(", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="in", pivote:1
 }
 GOTO(I98,param):
I191= { 
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
 }
 GOTO(I104,)):
I192= { 
param->( structure ) , c="=>", pivote:2
param->( structure ) , c="(", pivote:2
param->( structure ) , c=";", pivote:2
param->( structure ) , c="+", pivote:2
param->( structure ) , c="-", pivote:2
param->( structure ) , c="*", pivote:2
param->( structure ) , c="/", pivote:2
param->( structure ) , c="in", pivote:2
 }
 GOTO(I105,exp):
I193= { 
exp->atom param => exp , c="$", pivote:3
 }
 GOTO(I105,block):
I194= { 
atom->atom param => block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->atom param => block , c=";", pivote:3
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->atom param => block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->atom param => block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->atom param => block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->atom param => block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->atom param => block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I105,high_level):
I195= { 
exp->high_level ; , c="$", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c=";", pivote:3
high_level->atom param => high_level , c="in", pivote:3
 }
 GOTO(I108,atom):
I196= { 
high_level->function atom param high_level , c=";", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
 }
 GOTO(I109,param):
I197= { 
high_level->atom param => high_level , c=";", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
 }
 GOTO(I114,)):
I198= { 
param->( ) , c="{", pivote:1
param->( ) , c="=>", pivote:1
param->( ) , c="(", pivote:1
 }
 GOTO(I114,structure):
I199= { 
param->( structure ) , c="{", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="=>", pivote:1
param->( structure ) , c="(", pivote:1
 }
 GOTO(I115,block):
I200= { 
atom->function atom param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I116,atom):
I201= { 
atom->type label inherits atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
 }
 GOTO(I117,function):
I202= { 
exp->function atom param exp , c="(", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c=";", pivote:0
atom->function atom param block , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
exp->function atom param exp , c="{", pivote:0
exp->function atom param exp , c="int", pivote:0
exp->function atom param exp , c="protocol", pivote:0
exp->function atom param exp , c="type", pivote:0
exp->function atom param exp , c="function", pivote:0
exp->function atom param exp , c="let", pivote:0
exp->function atom param exp , c="}", pivote:0
 }
 GOTO(I117,}):
I203= { 
block->{ } , c="(", pivote:1
block->{ } , c="{", pivote:1
block->{ } , c="int", pivote:1
block->{ } , c="protocol", pivote:1
block->{ } , c="type", pivote:1
block->{ } , c="function", pivote:1
block->{ } , c="let", pivote:1
block->{ } , c="}", pivote:1
 }
 GOTO(I117,exp):
I204= { 
block->{ exp , c="(", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="int", pivote:1
block->{ exp , c="protocol", pivote:1
block->{ exp , c="type", pivote:1
block->{ exp , c="function", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="}", pivote:1
 }
 GOTO(I117,atom):
I205= { 
exp->atom param => exp , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c=";", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:0
exp->atom param => exp , c="int", pivote:0
exp->atom param => exp , c="protocol", pivote:0
exp->atom param => exp , c="type", pivote:0
exp->atom param => exp , c="function", pivote:0
exp->atom param => exp , c="let", pivote:0
exp->atom param => exp , c="}", pivote:0
 }
 GOTO(I117,high_level):
I206= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
 }
 GOTO(I118,}):
I207= { 
block->block } , c="(", pivote:1
block->block } , c="{", pivote:1
block->block } , c="int", pivote:1
block->block } , c="protocol", pivote:1
block->block } , c="type", pivote:1
block->block } , c="function", pivote:1
block->block } , c="let", pivote:1
block->block } , c="}", pivote:1
 }
 GOTO(I118,exp):
I208= { 
block->block exp , c="(", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="int", pivote:1
block->block exp , c="protocol", pivote:1
block->block exp , c="type", pivote:1
block->block exp , c="function", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="}", pivote:1
 }
 GOTO(I118,block):
I209= { 
block->block block , c="(", pivote:1
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
block->block block , c="{", pivote:1
block->block block , c="int", pivote:1
block->block block , c="protocol", pivote:1
block->block block , c="type", pivote:1
block->block block , c="function", pivote:1
block->block block , c="let", pivote:1
block->block block , c="}", pivote:1
 }
 GOTO(I119,inherits):
I210= { 
atom->type label param inherits atom param block , c="(", pivote:3
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
 }
 GOTO(I119,block):
I211= { 
atom->type label param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I120,atom):
I212= { 
atom->protocol label extends atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
 }
 GOTO(I122,param):
I213= { 
high_level->function atom param high_level , c=")", pivote:2
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->function atom param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I123,inherits):
I214= { 
atom->type label inherits atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label inherits atom block , c=")", pivote:2
atom->type label inherits atom block , c="+", pivote:2
atom->type label inherits atom block , c="-", pivote:2
atom->type label inherits atom block , c="*", pivote:2
atom->type label inherits atom block , c="/", pivote:2
atom->type label inherits atom block , c="in", pivote:2
 }
 GOTO(I123,{):
I215= { 
block->{ exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->{ } , c="(", pivote:0
block->{ exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->{ } , c="{", pivote:0
block->{ exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->{ exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->{ exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->{ } , c="int", pivote:0
block->{ } , c="protocol", pivote:0
block->{ } , c="type", pivote:0
block->{ } , c="function", pivote:0
block->{ } , c="let", pivote:0
block->{ exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->{ } , c="}", pivote:0
block->{ exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->{ } , c=")", pivote:0
block->{ exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->{ } , c="+", pivote:0
block->{ exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->{ } , c="-", pivote:0
block->{ exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->{ } , c="*", pivote:0
block->{ exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->{ } , c="/", pivote:0
block->{ exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->{ } , c="in", pivote:0
 }
 GOTO(I123,block):
I216= { 
atom->type label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label block , c=")", pivote:2
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I123,param):
I217= { 
atom->type label param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:2
atom->type label param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:2
atom->type label param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:2
atom->type label param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:2
atom->type label param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:2
atom->type label param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:2
atom->type label param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:2
 }
 GOTO(I124,extends):
I218= { 
atom->protocol label extends atom block , c="(", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->protocol label extends atom block , c=")", pivote:2
atom->protocol label extends atom block , c="+", pivote:2
atom->protocol label extends atom block , c="-", pivote:2
atom->protocol label extends atom block , c="*", pivote:2
atom->protocol label extends atom block , c="/", pivote:2
atom->protocol label extends atom block , c="in", pivote:2
 }
 GOTO(I124,block):
I219= { 
atom->protocol label block , c="(", pivote:2
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label block , c=")", pivote:2
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->protocol label block , c="+", pivote:2
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label block , c="-", pivote:2
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label block , c="*", pivote:2
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label block , c="/", pivote:2
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label block , c="in", pivote:2
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I125,)):
I220= { 
atom->( high_level ) , c="(", pivote:2
atom->( high_level ) , c=")", pivote:2
atom->( high_level ) , c="+", pivote:2
atom->( high_level ) , c="-", pivote:2
atom->( high_level ) , c="*", pivote:2
atom->( high_level ) , c="/", pivote:2
atom->( high_level ) , c="in", pivote:2
 }
 GOTO(I126,function):
I221= { 
atom->function atom param block , c=")", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="(", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="in", pivote:0
 }
 GOTO(I126,int):
I222= { 
label->int , c=")", pivote:0
label->int , c="*", pivote:0
label->int , c="/", pivote:0
label->int , c="(", pivote:0
label->int , c="+", pivote:0
label->int , c="-", pivote:0
label->int , c="in", pivote:0
 }
 GOTO(I126,():
I223= { 
atom->( high_level ) , c=")", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->( high_level ) , c="*", pivote:0
atom->( high_level ) , c="/", pivote:0
atom->( high_level ) , c="(", pivote:0
atom->( high_level ) , c="+", pivote:0
atom->( high_level ) , c="-", pivote:0
atom->( high_level ) , c="in", pivote:0
 }
 GOTO(I126,atom):
I224= { 
div_mult->atom , c=")", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->atom , c="+", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->atom , c="-", pivote:0
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I126,div_mult):
I225= { 
sum_minus->sum_minus + div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus + div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I126,label):
I226= { 
atom->label , c=")", pivote:0
atom->label , c="*", pivote:0
atom->label , c="/", pivote:0
atom->label , c="(", pivote:0
atom->label , c="+", pivote:0
atom->label , c="-", pivote:0
atom->label , c="in", pivote:0
 }
 GOTO(I127,div_mult):
I227= { 
sum_minus->sum_minus - div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="in", pivote:2
div_mult->div_mult * atom , c="in", pivote:0
div_mult->div_mult / atom , c="in", pivote:0
 }
 GOTO(I128,)):
I228= { 
param->( ) , c="=>", pivote:1
param->( ) , c="(", pivote:1
param->( ) , c=")", pivote:1
param->( ) , c="+", pivote:1
param->( ) , c="-", pivote:1
param->( ) , c="*", pivote:1
param->( ) , c="/", pivote:1
param->( ) , c="in", pivote:1
 }
 GOTO(I128,structure):
I229= { 
param->( structure ) , c="=>", pivote:1
structure->structure , high_level , c=")", pivote:0
structure->structure , high_level , c=",", pivote:0
param->( structure ) , c="(", pivote:1
param->( structure ) , c=")", pivote:1
param->( structure ) , c="+", pivote:1
param->( structure ) , c="-", pivote:1
param->( structure ) , c="*", pivote:1
param->( structure ) , c="/", pivote:1
param->( structure ) , c="in", pivote:1
 }
 GOTO(I129,=>):
I230= { 
high_level->atom param => high_level , c=")", pivote:2
high_level->sum_minus , c=")", pivote:-1
high_level->label = high_level , c=")", pivote:-1
high_level->var_declaration = high_level , c=")", pivote:-1
high_level->param in high_level , c=")", pivote:-1
high_level->high_level in high_level , c=")", pivote:-1
high_level->function atom param high_level , c=")", pivote:-1
high_level->atom param => high_level , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=")", pivote:-1
atom->( high_level ) , c=")", pivote:-1
atom->protocol label block , c=")", pivote:-1
atom->protocol label extends atom block , c=")", pivote:-1
atom->type label block , c=")", pivote:-1
atom->type label param block , c=")", pivote:-1
atom->type label inherits atom block , c=")", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:-1
atom->function atom param block , c=")", pivote:-1
atom->atom param => block , c=")", pivote:-1
atom->atom param , c=")", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=")", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I130,atom):
I231= { 
div_mult->div_mult * atom , c=")", pivote:2
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult * atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I131,atom):
I232= { 
div_mult->div_mult / atom , c=")", pivote:2
atom->atom param => block , c=")", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c=")", pivote:0
param->( structure ) , c=")", pivote:-1
param->( ) , c=")", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
div_mult->div_mult / atom , c="+", pivote:2
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:2
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:2
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:2
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
div_mult->div_mult / atom , c="in", pivote:2
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
 }
 GOTO(I132,high_level):
I233= { 
high_level->var_declaration = high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->var_declaration = high_level , c="in", pivote:2
 }
 GOTO(I133,high_level):
I234= { 
high_level->high_level in high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->high_level in high_level , c="in", pivote:2
 }
 GOTO(I135,high_level):
I235= { 
high_level->param in high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->param in high_level , c="in", pivote:2
 }
 GOTO(I136,high_level):
I236= { 
high_level->label = high_level , c=")", pivote:2
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->label = high_level , c="in", pivote:2
 }
 GOTO(I138,)):
I237= { 
param->( structure ) , c="int", pivote:2
param->( structure ) , c="(", pivote:2
param->( structure ) , c="protocol", pivote:2
param->( structure ) , c="type", pivote:2
param->( structure ) , c="function", pivote:2
param->( structure ) , c="let", pivote:2
param->( structure ) , c="=>", pivote:2
param->( structure ) , c="{", pivote:2
 }
 GOTO(I139,block):
I238= { 
atom->atom param => block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I143,atom):
I239= { 
atom->function atom param block , c="{", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->function atom param block , c="(", pivote:1
 }
 GOTO(I144,label):
I240= { 
atom->type label block , c="{", pivote:1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param block , c="{", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:1
atom->type label param inherits atom param block , c="{", pivote:1
param->( structure ) , c="inherits", pivote:-1
param->( ) , c="inherits", pivote:-1
atom->type label block , c="(", pivote:1
atom->type label param block , c="(", pivote:1
atom->type label inherits atom block , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:1
 }
 GOTO(I145,label):
I241= { 
atom->protocol label block , c="{", pivote:1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->protocol label extends atom block , c="{", pivote:1
atom->protocol label block , c="(", pivote:1
atom->protocol label extends atom block , c="(", pivote:1
 }
 GOTO(I147,high_level):
I242= { 
atom->( high_level ) , c="{", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="(", pivote:1
 }
 GOTO(I148,block):
I243= { 
atom->type label inherits atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label inherits atom block , c=";", pivote:4
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->type label inherits atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label inherits atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label inherits atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label inherits atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label inherits atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I148,param):
I244= { 
atom->atom param => block , c="{", pivote:1
atom->atom param , c="{", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
 }
 GOTO(I151,)):
I245= { 
param->( structure ) , c="{", pivote:2
param->( structure ) , c="inherits", pivote:2
 }
 GOTO(I152,atom):
I246= { 
exp->function atom param exp , c="(", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c=";", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
exp->function atom param exp , c="{", pivote:1
exp->function atom param exp , c="int", pivote:1
exp->function atom param exp , c="protocol", pivote:1
exp->function atom param exp , c="type", pivote:1
exp->function atom param exp , c="function", pivote:1
exp->function atom param exp , c="let", pivote:1
exp->function atom param exp , c="}", pivote:1
exp->function atom param exp , c=";", pivote:1
exp->function atom param exp , c="+", pivote:1
exp->function atom param exp , c="-", pivote:1
exp->function atom param exp , c="*", pivote:1
exp->function atom param exp , c="/", pivote:1
exp->function atom param exp , c="in", pivote:1
 }
 GOTO(I155,param):
I247= { 
exp->atom param => exp , c="(", pivote:1
high_level->atom param => high_level , c=";", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
exp->atom param => exp , c="{", pivote:1
exp->atom param => exp , c="int", pivote:1
exp->atom param => exp , c="protocol", pivote:1
exp->atom param => exp , c="type", pivote:1
exp->atom param => exp , c="function", pivote:1
exp->atom param => exp , c="let", pivote:1
exp->atom param => exp , c="}", pivote:1
exp->atom param => exp , c=";", pivote:1
exp->atom param => exp , c="+", pivote:1
exp->atom param => exp , c="-", pivote:1
exp->atom param => exp , c="*", pivote:1
exp->atom param => exp , c="/", pivote:1
exp->atom param => exp , c="in", pivote:1
 }
 GOTO(I156,;):
I248= { 
exp->high_level ; , c="(", pivote:1
exp->high_level ; , c="{", pivote:1
exp->high_level ; , c="int", pivote:1
exp->high_level ; , c="protocol", pivote:1
exp->high_level ; , c="type", pivote:1
exp->high_level ; , c="function", pivote:1
exp->high_level ; , c="let", pivote:1
exp->high_level ; , c="}", pivote:1
exp->high_level ; , c=";", pivote:1
exp->high_level ; , c="+", pivote:1
exp->high_level ; , c="-", pivote:1
exp->high_level ; , c="*", pivote:1
exp->high_level ; , c="/", pivote:1
exp->high_level ; , c="in", pivote:1
 }
 GOTO(I160,atom):
I249= { 
atom->type label param inherits atom param block , c="(", pivote:4
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:4
atom->type label param inherits atom param block , c="+", pivote:4
atom->type label param inherits atom param block , c="-", pivote:4
atom->type label param inherits atom param block , c="*", pivote:4
atom->type label param inherits atom param block , c="/", pivote:4
atom->type label param inherits atom param block , c="in", pivote:4
 }
 GOTO(I162,block):
I250= { 
atom->protocol label extends atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label extends atom block , c=";", pivote:4
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->protocol label extends atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label extends atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label extends atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label extends atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label extends atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I163,block):
I251= { 
atom->function atom param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->function atom param block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->function atom param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->function atom param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->function atom param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->function atom param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->function atom param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->function atom param block , c=",", pivote:3
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I163,high_level):
I252= { 
high_level->function atom param high_level , c=")", pivote:3
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c="in", pivote:3
high_level->function atom param high_level , c=",", pivote:3
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I164,atom):
I253= { 
atom->type label inherits atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label inherits atom block , c=")", pivote:3
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label inherits atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label inherits atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label inherits atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label inherits atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label inherits atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label inherits atom block , c=",", pivote:3
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I165,function):
I254= { 
exp->function atom param exp , c="(", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c=";", pivote:0
atom->function atom param block , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
exp->function atom param exp , c="{", pivote:0
exp->function atom param exp , c="int", pivote:0
exp->function atom param exp , c="protocol", pivote:0
exp->function atom param exp , c="type", pivote:0
exp->function atom param exp , c="function", pivote:0
exp->function atom param exp , c="let", pivote:0
exp->function atom param exp , c="}", pivote:0
exp->function atom param exp , c=")", pivote:0
exp->function atom param exp , c="+", pivote:0
exp->function atom param exp , c="-", pivote:0
exp->function atom param exp , c="*", pivote:0
exp->function atom param exp , c="/", pivote:0
exp->function atom param exp , c="in", pivote:0
exp->function atom param exp , c=",", pivote:0
 }
 GOTO(I165,}):
I255= { 
block->{ } , c="(", pivote:1
block->{ } , c="{", pivote:1
block->{ } , c="int", pivote:1
block->{ } , c="protocol", pivote:1
block->{ } , c="type", pivote:1
block->{ } , c="function", pivote:1
block->{ } , c="let", pivote:1
block->{ } , c="}", pivote:1
block->{ } , c=")", pivote:1
block->{ } , c="+", pivote:1
block->{ } , c="-", pivote:1
block->{ } , c="*", pivote:1
block->{ } , c="/", pivote:1
block->{ } , c="in", pivote:1
block->{ } , c=",", pivote:1
 }
 GOTO(I165,exp):
I256= { 
block->{ exp , c="(", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="int", pivote:1
block->{ exp , c="protocol", pivote:1
block->{ exp , c="type", pivote:1
block->{ exp , c="function", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="}", pivote:1
block->{ exp , c=")", pivote:1
block->{ exp , c="+", pivote:1
block->{ exp , c="-", pivote:1
block->{ exp , c="*", pivote:1
block->{ exp , c="/", pivote:1
block->{ exp , c="in", pivote:1
block->{ exp , c=",", pivote:1
 }
 GOTO(I165,atom):
I257= { 
exp->atom param => exp , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c=";", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:0
exp->atom param => exp , c="int", pivote:0
exp->atom param => exp , c="protocol", pivote:0
exp->atom param => exp , c="type", pivote:0
exp->atom param => exp , c="function", pivote:0
exp->atom param => exp , c="let", pivote:0
exp->atom param => exp , c="}", pivote:0
exp->atom param => exp , c=")", pivote:0
exp->atom param => exp , c="+", pivote:0
exp->atom param => exp , c="-", pivote:0
exp->atom param => exp , c="*", pivote:0
exp->atom param => exp , c="/", pivote:0
exp->atom param => exp , c="in", pivote:0
exp->atom param => exp , c=",", pivote:0
 }
 GOTO(I165,high_level):
I258= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
exp->high_level ; , c=",", pivote:0
 }
 GOTO(I166,}):
I259= { 
block->block } , c="(", pivote:1
block->block } , c="{", pivote:1
block->block } , c="int", pivote:1
block->block } , c="protocol", pivote:1
block->block } , c="type", pivote:1
block->block } , c="function", pivote:1
block->block } , c="let", pivote:1
block->block } , c="}", pivote:1
block->block } , c=")", pivote:1
block->block } , c="+", pivote:1
block->block } , c="-", pivote:1
block->block } , c="*", pivote:1
block->block } , c="/", pivote:1
block->block } , c="in", pivote:1
block->block } , c=",", pivote:1
 }
 GOTO(I166,exp):
I260= { 
block->block exp , c="(", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="int", pivote:1
block->block exp , c="protocol", pivote:1
block->block exp , c="type", pivote:1
block->block exp , c="function", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="}", pivote:1
block->block exp , c=")", pivote:1
block->block exp , c="+", pivote:1
block->block exp , c="-", pivote:1
block->block exp , c="*", pivote:1
block->block exp , c="/", pivote:1
block->block exp , c="in", pivote:1
block->block exp , c=",", pivote:1
 }
 GOTO(I166,block):
I261= { 
block->block block , c="(", pivote:1
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
block->block block , c="{", pivote:1
block->block block , c="int", pivote:1
block->block block , c="protocol", pivote:1
block->block block , c="type", pivote:1
block->block block , c="function", pivote:1
block->block block , c="let", pivote:1
block->block block , c="}", pivote:1
block->block block , c=")", pivote:1
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
block->block block , c="+", pivote:1
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
block->block block , c="-", pivote:1
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
block->block block , c="*", pivote:1
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
block->block block , c="/", pivote:1
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
block->block block , c="in", pivote:1
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
block->block block , c=",", pivote:1
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I167,inherits):
I262= { 
atom->type label param inherits atom param block , c="(", pivote:3
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:3
atom->type label param inherits atom param block , c="+", pivote:3
atom->type label param inherits atom param block , c="-", pivote:3
atom->type label param inherits atom param block , c="*", pivote:3
atom->type label param inherits atom param block , c="/", pivote:3
atom->type label param inherits atom param block , c="in", pivote:3
atom->type label param inherits atom param block , c=",", pivote:3
 }
 GOTO(I167,block):
I263= { 
atom->type label param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->type label param block , c=",", pivote:3
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I168,atom):
I264= { 
atom->protocol label extends atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->protocol label extends atom block , c=")", pivote:3
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->protocol label extends atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->protocol label extends atom block , c=",", pivote:3
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I171,atom):
I265= { 
atom->function atom param block , c=")", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="(", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="in", pivote:1
atom->function atom param block , c=",", pivote:1
 }
 GOTO(I173,high_level):
I266= { 
atom->( high_level ) , c=")", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="(", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="in", pivote:1
atom->( high_level ) , c=",", pivote:1
 }
 GOTO(I174,param):
I267= { 
atom->atom param => block , c=")", pivote:1
atom->atom param , c=")", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
atom->atom param => block , c=",", pivote:1
atom->atom param , c=",", pivote:1
 }
 GOTO(I179,)):
I268= { 
param->( structure ) , c="=>", pivote:2
param->( structure ) , c="(", pivote:2
param->( structure ) , c=")", pivote:2
param->( structure ) , c="+", pivote:2
param->( structure ) , c="-", pivote:2
param->( structure ) , c="*", pivote:2
param->( structure ) , c="/", pivote:2
param->( structure ) , c="in", pivote:2
param->( structure ) , c=",", pivote:2
 }
 GOTO(I180,block):
I269= { 
atom->atom param => block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->atom param => block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->atom param => block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->atom param => block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->atom param => block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->atom param => block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->atom param => block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->atom param => block , c=",", pivote:3
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I180,high_level):
I270= { 
high_level->atom param => high_level , c=")", pivote:3
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c="in", pivote:3
high_level->atom param => high_level , c=",", pivote:3
high_level->high_level in high_level , c=",", pivote:0
 }
 GOTO(I189,param):
I271= { 
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="(", pivote:2
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I191,=>):
I272= { 
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="(", pivote:2
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I196,param):
I273= { 
high_level->function atom param high_level , c=";", pivote:2
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I197,=>):
I274= { 
high_level->atom param => high_level , c=";", pivote:2
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
label->int , c="(", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I199,)):
I275= { 
param->( structure ) , c="{", pivote:2
param->( structure ) , c="=>", pivote:2
param->( structure ) , c="(", pivote:2
 }
 GOTO(I201,block):
I276= { 
atom->type label inherits atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I202,atom):
I277= { 
exp->function atom param exp , c="(", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c=";", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
exp->function atom param exp , c="{", pivote:1
exp->function atom param exp , c="int", pivote:1
exp->function atom param exp , c="protocol", pivote:1
exp->function atom param exp , c="type", pivote:1
exp->function atom param exp , c="function", pivote:1
exp->function atom param exp , c="let", pivote:1
exp->function atom param exp , c="}", pivote:1
 }
 GOTO(I205,param):
I278= { 
exp->atom param => exp , c="(", pivote:1
high_level->atom param => high_level , c=";", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
exp->atom param => exp , c="{", pivote:1
exp->atom param => exp , c="int", pivote:1
exp->atom param => exp , c="protocol", pivote:1
exp->atom param => exp , c="type", pivote:1
exp->atom param => exp , c="function", pivote:1
exp->atom param => exp , c="let", pivote:1
exp->atom param => exp , c="}", pivote:1
 }
 GOTO(I206,;):
I279= { 
exp->high_level ; , c="(", pivote:1
exp->high_level ; , c="{", pivote:1
exp->high_level ; , c="int", pivote:1
exp->high_level ; , c="protocol", pivote:1
exp->high_level ; , c="type", pivote:1
exp->high_level ; , c="function", pivote:1
exp->high_level ; , c="let", pivote:1
exp->high_level ; , c="}", pivote:1
 }
 GOTO(I210,atom):
I280= { 
atom->type label param inherits atom param block , c="(", pivote:4
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
 }
 GOTO(I212,block):
I281= { 
atom->protocol label extends atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I213,block):
I282= { 
atom->function atom param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->function atom param block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->function atom param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->function atom param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->function atom param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->function atom param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->function atom param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I213,high_level):
I283= { 
high_level->function atom param high_level , c=")", pivote:3
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c="in", pivote:3
 }
 GOTO(I214,atom):
I284= { 
atom->type label inherits atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label inherits atom block , c=")", pivote:3
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label inherits atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label inherits atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label inherits atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label inherits atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label inherits atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I215,function):
I285= { 
exp->function atom param exp , c="(", pivote:0
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
high_level->function atom param high_level , c=";", pivote:0
atom->function atom param block , c="(", pivote:0
high_level->function atom param high_level , c="in", pivote:0
atom->function atom param block , c=";", pivote:0
atom->function atom param block , c="+", pivote:0
atom->function atom param block , c="-", pivote:0
atom->function atom param block , c="*", pivote:0
atom->function atom param block , c="/", pivote:0
atom->function atom param block , c="in", pivote:0
exp->function atom param exp , c="{", pivote:0
exp->function atom param exp , c="int", pivote:0
exp->function atom param exp , c="protocol", pivote:0
exp->function atom param exp , c="type", pivote:0
exp->function atom param exp , c="function", pivote:0
exp->function atom param exp , c="let", pivote:0
exp->function atom param exp , c="}", pivote:0
exp->function atom param exp , c=")", pivote:0
exp->function atom param exp , c="+", pivote:0
exp->function atom param exp , c="-", pivote:0
exp->function atom param exp , c="*", pivote:0
exp->function atom param exp , c="/", pivote:0
exp->function atom param exp , c="in", pivote:0
 }
 GOTO(I215,}):
I286= { 
block->{ } , c="(", pivote:1
block->{ } , c="{", pivote:1
block->{ } , c="int", pivote:1
block->{ } , c="protocol", pivote:1
block->{ } , c="type", pivote:1
block->{ } , c="function", pivote:1
block->{ } , c="let", pivote:1
block->{ } , c="}", pivote:1
block->{ } , c=")", pivote:1
block->{ } , c="+", pivote:1
block->{ } , c="-", pivote:1
block->{ } , c="*", pivote:1
block->{ } , c="/", pivote:1
block->{ } , c="in", pivote:1
 }
 GOTO(I215,exp):
I287= { 
block->{ exp , c="(", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="int", pivote:1
block->{ exp , c="protocol", pivote:1
block->{ exp , c="type", pivote:1
block->{ exp , c="function", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="}", pivote:1
block->{ exp , c=")", pivote:1
block->{ exp , c="+", pivote:1
block->{ exp , c="-", pivote:1
block->{ exp , c="*", pivote:1
block->{ exp , c="/", pivote:1
block->{ exp , c="in", pivote:1
 }
 GOTO(I215,atom):
I288= { 
exp->atom param => exp , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
high_level->atom param => high_level , c=";", pivote:0
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
high_level->atom param => high_level , c="in", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
atom->atom param => block , c=";", pivote:0
atom->atom param , c=";", pivote:0
param->( structure ) , c=";", pivote:-1
param->( ) , c=";", pivote:-1
div_mult->atom , c="in", pivote:0
atom->atom param => block , c="+", pivote:0
atom->atom param , c="+", pivote:0
param->( structure ) , c="+", pivote:-1
param->( ) , c="+", pivote:-1
atom->atom param => block , c="-", pivote:0
atom->atom param , c="-", pivote:0
param->( structure ) , c="-", pivote:-1
param->( ) , c="-", pivote:-1
atom->atom param => block , c="*", pivote:0
atom->atom param , c="*", pivote:0
param->( structure ) , c="*", pivote:-1
param->( ) , c="*", pivote:-1
atom->atom param => block , c="/", pivote:0
atom->atom param , c="/", pivote:0
param->( structure ) , c="/", pivote:-1
param->( ) , c="/", pivote:-1
atom->atom param => block , c="in", pivote:0
atom->atom param , c="in", pivote:0
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:0
exp->atom param => exp , c="int", pivote:0
exp->atom param => exp , c="protocol", pivote:0
exp->atom param => exp , c="type", pivote:0
exp->atom param => exp , c="function", pivote:0
exp->atom param => exp , c="let", pivote:0
exp->atom param => exp , c="}", pivote:0
exp->atom param => exp , c=")", pivote:0
exp->atom param => exp , c="+", pivote:0
exp->atom param => exp , c="-", pivote:0
exp->atom param => exp , c="*", pivote:0
exp->atom param => exp , c="/", pivote:0
exp->atom param => exp , c="in", pivote:0
 }
 GOTO(I215,high_level):
I289= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I216,}):
I290= { 
block->block } , c="(", pivote:1
block->block } , c="{", pivote:1
block->block } , c="int", pivote:1
block->block } , c="protocol", pivote:1
block->block } , c="type", pivote:1
block->block } , c="function", pivote:1
block->block } , c="let", pivote:1
block->block } , c="}", pivote:1
block->block } , c=")", pivote:1
block->block } , c="+", pivote:1
block->block } , c="-", pivote:1
block->block } , c="*", pivote:1
block->block } , c="/", pivote:1
block->block } , c="in", pivote:1
 }
 GOTO(I216,exp):
I291= { 
block->block exp , c="(", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="int", pivote:1
block->block exp , c="protocol", pivote:1
block->block exp , c="type", pivote:1
block->block exp , c="function", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="}", pivote:1
block->block exp , c=")", pivote:1
block->block exp , c="+", pivote:1
block->block exp , c="-", pivote:1
block->block exp , c="*", pivote:1
block->block exp , c="/", pivote:1
block->block exp , c="in", pivote:1
 }
 GOTO(I216,block):
I292= { 
block->block block , c="(", pivote:1
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
block->block block , c="{", pivote:1
block->block block , c="int", pivote:1
block->block block , c="protocol", pivote:1
block->block block , c="type", pivote:1
block->block block , c="function", pivote:1
block->block block , c="let", pivote:1
block->block block , c="}", pivote:1
block->block block , c=")", pivote:1
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
block->block block , c="+", pivote:1
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
block->block block , c="-", pivote:1
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
block->block block , c="*", pivote:1
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
block->block block , c="/", pivote:1
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
block->block block , c="in", pivote:1
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I217,inherits):
I293= { 
atom->type label param inherits atom param block , c="(", pivote:3
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:3
atom->type label param inherits atom param block , c="+", pivote:3
atom->type label param inherits atom param block , c="-", pivote:3
atom->type label param inherits atom param block , c="*", pivote:3
atom->type label param inherits atom param block , c="/", pivote:3
atom->type label param inherits atom param block , c="in", pivote:3
 }
 GOTO(I217,block):
I294= { 
atom->type label param block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label param block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I218,atom):
I295= { 
atom->protocol label extends atom block , c="(", pivote:3
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->protocol label extends atom block , c=")", pivote:3
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->protocol label extends atom block , c="+", pivote:3
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->protocol label extends atom block , c="-", pivote:3
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->protocol label extends atom block , c="*", pivote:3
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->protocol label extends atom block , c="/", pivote:3
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->protocol label extends atom block , c="in", pivote:3
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I221,atom):
I296= { 
atom->function atom param block , c=")", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="(", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="in", pivote:1
 }
 GOTO(I223,high_level):
I297= { 
atom->( high_level ) , c=")", pivote:1
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
atom->( high_level ) , c="*", pivote:1
atom->( high_level ) , c="/", pivote:1
atom->( high_level ) , c="(", pivote:1
atom->( high_level ) , c="+", pivote:1
atom->( high_level ) , c="-", pivote:1
atom->( high_level ) , c="in", pivote:1
 }
 GOTO(I224,param):
I298= { 
atom->atom param => block , c=")", pivote:1
atom->atom param , c=")", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
 }
 GOTO(I229,)):
I299= { 
param->( structure ) , c="=>", pivote:2
param->( structure ) , c="(", pivote:2
param->( structure ) , c=")", pivote:2
param->( structure ) , c="+", pivote:2
param->( structure ) , c="-", pivote:2
param->( structure ) , c="*", pivote:2
param->( structure ) , c="/", pivote:2
param->( structure ) , c="in", pivote:2
 }
 GOTO(I230,block):
I300= { 
atom->atom param => block , c="(", pivote:3
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->atom param => block , c=")", pivote:3
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->atom param => block , c="+", pivote:3
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->atom param => block , c="-", pivote:3
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->atom param => block , c="*", pivote:3
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->atom param => block , c="/", pivote:3
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->atom param => block , c="in", pivote:3
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I230,high_level):
I301= { 
high_level->atom param => high_level , c=")", pivote:3
high_level->high_level in high_level , c=")", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c="in", pivote:3
 }
 GOTO(I239,param):
I302= { 
atom->function atom param block , c="{", pivote:2
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->function atom param block , c="(", pivote:2
 }
 GOTO(I240,inherits):
I303= { 
atom->type label inherits atom block , c="{", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:2
 }
 GOTO(I240,block):
I304= { 
atom->type label block , c="{", pivote:2
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label block , c="(", pivote:2
 }
 GOTO(I240,param):
I305= { 
atom->type label param block , c="{", pivote:2
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:2
atom->type label param block , c="(", pivote:2
atom->type label param inherits atom param block , c="(", pivote:2
 }
 GOTO(I241,extends):
I306= { 
atom->protocol label extends atom block , c="{", pivote:2
atom->label , c="{", pivote:-1
atom->( high_level ) , c="{", pivote:-1
atom->protocol label block , c="{", pivote:-1
atom->protocol label extends atom block , c="{", pivote:-1
atom->type label block , c="{", pivote:-1
atom->type label param block , c="{", pivote:-1
atom->type label inherits atom block , c="{", pivote:-1
atom->type label param inherits atom param block , c="{", pivote:-1
atom->function atom param block , c="{", pivote:-1
atom->atom param => block , c="{", pivote:-1
atom->atom param , c="{", pivote:-1
label->int , c="{", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:2
 }
 GOTO(I241,block):
I307= { 
atom->protocol label block , c="{", pivote:2
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label block , c="(", pivote:2
 }
 GOTO(I242,)):
I308= { 
atom->( high_level ) , c="{", pivote:2
atom->( high_level ) , c="(", pivote:2
 }
 GOTO(I244,=>):
I309= { 
atom->atom param => block , c="{", pivote:2
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:2
 }
 GOTO(I246,param):
I310= { 
exp->function atom param exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c=";", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->function atom param exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->function atom param exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->function atom param exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->function atom param exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->function atom param exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->function atom param exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->function atom param exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->function atom param exp , c=";", pivote:2
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
exp->function atom param exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->function atom param exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->function atom param exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->function atom param exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->function atom param exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
 }
 GOTO(I247,=>):
I311= { 
exp->atom param => exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c=";", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->atom param => exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->atom param => exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->atom param => exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->atom param => exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->atom param => exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->atom param => exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->atom param => exp , c=";", pivote:2
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
exp->atom param => exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->atom param => exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->atom param => exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->atom param => exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->atom param => exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
 }
 GOTO(I249,param):
I312= { 
atom->type label param inherits atom param block , c="(", pivote:5
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->type label param inherits atom param block , c=";", pivote:5
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:5
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:5
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:5
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:5
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:5
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I253,block):
I313= { 
atom->type label inherits atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label inherits atom block , c=")", pivote:4
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label inherits atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label inherits atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label inherits atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label inherits atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label inherits atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->type label inherits atom block , c=",", pivote:4
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I254,atom):
I314= { 
exp->function atom param exp , c="(", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c=";", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
exp->function atom param exp , c="{", pivote:1
exp->function atom param exp , c="int", pivote:1
exp->function atom param exp , c="protocol", pivote:1
exp->function atom param exp , c="type", pivote:1
exp->function atom param exp , c="function", pivote:1
exp->function atom param exp , c="let", pivote:1
exp->function atom param exp , c="}", pivote:1
exp->function atom param exp , c=")", pivote:1
exp->function atom param exp , c="+", pivote:1
exp->function atom param exp , c="-", pivote:1
exp->function atom param exp , c="*", pivote:1
exp->function atom param exp , c="/", pivote:1
exp->function atom param exp , c="in", pivote:1
exp->function atom param exp , c=",", pivote:1
 }
 GOTO(I257,param):
I315= { 
exp->atom param => exp , c="(", pivote:1
high_level->atom param => high_level , c=";", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
exp->atom param => exp , c="{", pivote:1
exp->atom param => exp , c="int", pivote:1
exp->atom param => exp , c="protocol", pivote:1
exp->atom param => exp , c="type", pivote:1
exp->atom param => exp , c="function", pivote:1
exp->atom param => exp , c="let", pivote:1
exp->atom param => exp , c="}", pivote:1
exp->atom param => exp , c=")", pivote:1
exp->atom param => exp , c="+", pivote:1
exp->atom param => exp , c="-", pivote:1
exp->atom param => exp , c="*", pivote:1
exp->atom param => exp , c="/", pivote:1
exp->atom param => exp , c="in", pivote:1
exp->atom param => exp , c=",", pivote:1
 }
 GOTO(I258,;):
I316= { 
exp->high_level ; , c="(", pivote:1
exp->high_level ; , c="{", pivote:1
exp->high_level ; , c="int", pivote:1
exp->high_level ; , c="protocol", pivote:1
exp->high_level ; , c="type", pivote:1
exp->high_level ; , c="function", pivote:1
exp->high_level ; , c="let", pivote:1
exp->high_level ; , c="}", pivote:1
exp->high_level ; , c=")", pivote:1
exp->high_level ; , c="+", pivote:1
exp->high_level ; , c="-", pivote:1
exp->high_level ; , c="*", pivote:1
exp->high_level ; , c="/", pivote:1
exp->high_level ; , c="in", pivote:1
exp->high_level ; , c=",", pivote:1
 }
 GOTO(I262,atom):
I317= { 
atom->type label param inherits atom param block , c="(", pivote:4
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:4
atom->type label param inherits atom param block , c="+", pivote:4
atom->type label param inherits atom param block , c="-", pivote:4
atom->type label param inherits atom param block , c="*", pivote:4
atom->type label param inherits atom param block , c="/", pivote:4
atom->type label param inherits atom param block , c="in", pivote:4
atom->type label param inherits atom param block , c=",", pivote:4
 }
 GOTO(I264,block):
I318= { 
atom->protocol label extends atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label extends atom block , c=")", pivote:4
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->protocol label extends atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label extends atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label extends atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label extends atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label extends atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->protocol label extends atom block , c=",", pivote:4
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I265,param):
I319= { 
atom->function atom param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="(", pivote:2
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->function atom param block , c=",", pivote:2
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I267,=>):
I320= { 
atom->atom param => block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="(", pivote:2
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->atom param => block , c=",", pivote:2
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I273,high_level):
I321= { 
high_level->function atom param high_level , c=";", pivote:3
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c="in", pivote:3
 }
 GOTO(I274,high_level):
I322= { 
high_level->atom param => high_level , c=";", pivote:3
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c="in", pivote:3
 }
 GOTO(I277,param):
I323= { 
exp->function atom param exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c=";", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->function atom param exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->function atom param exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->function atom param exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->function atom param exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->function atom param exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->function atom param exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->function atom param exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
 }
 GOTO(I278,=>):
I324= { 
exp->atom param => exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c=";", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->atom param => exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->atom param => exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->atom param => exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->atom param => exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->atom param => exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->atom param => exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
 }
 GOTO(I280,param):
I325= { 
atom->type label param inherits atom param block , c="(", pivote:5
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
 }
 GOTO(I284,block):
I326= { 
atom->type label inherits atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label inherits atom block , c=")", pivote:4
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label inherits atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label inherits atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label inherits atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label inherits atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label inherits atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I285,atom):
I327= { 
exp->function atom param exp , c="(", pivote:1
param->( structure ) , c="int", pivote:-1
param->( structure ) , c="(", pivote:-1
param->( structure ) , c="protocol", pivote:-1
param->( structure ) , c="type", pivote:-1
param->( structure ) , c="function", pivote:-1
param->( structure ) , c="let", pivote:-1
param->( ) , c="int", pivote:-1
param->( ) , c="(", pivote:-1
param->( ) , c="protocol", pivote:-1
param->( ) , c="type", pivote:-1
param->( ) , c="function", pivote:-1
param->( ) , c="let", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
high_level->function atom param high_level , c=";", pivote:1
atom->function atom param block , c="(", pivote:1
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
high_level->function atom param high_level , c="in", pivote:1
atom->function atom param block , c=";", pivote:1
atom->function atom param block , c="+", pivote:1
atom->function atom param block , c="-", pivote:1
atom->function atom param block , c="*", pivote:1
atom->function atom param block , c="/", pivote:1
atom->function atom param block , c="in", pivote:1
exp->function atom param exp , c="{", pivote:1
exp->function atom param exp , c="int", pivote:1
exp->function atom param exp , c="protocol", pivote:1
exp->function atom param exp , c="type", pivote:1
exp->function atom param exp , c="function", pivote:1
exp->function atom param exp , c="let", pivote:1
exp->function atom param exp , c="}", pivote:1
exp->function atom param exp , c=")", pivote:1
exp->function atom param exp , c="+", pivote:1
exp->function atom param exp , c="-", pivote:1
exp->function atom param exp , c="*", pivote:1
exp->function atom param exp , c="/", pivote:1
exp->function atom param exp , c="in", pivote:1
 }
 GOTO(I288,param):
I328= { 
exp->atom param => exp , c="(", pivote:1
high_level->atom param => high_level , c=";", pivote:1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->atom param => high_level , c="in", pivote:1
atom->atom param => block , c=";", pivote:1
atom->atom param , c=";", pivote:1
atom->atom param => block , c="+", pivote:1
atom->atom param , c="+", pivote:1
atom->atom param => block , c="-", pivote:1
atom->atom param , c="-", pivote:1
atom->atom param => block , c="*", pivote:1
atom->atom param , c="*", pivote:1
atom->atom param => block , c="/", pivote:1
atom->atom param , c="/", pivote:1
atom->atom param => block , c="in", pivote:1
atom->atom param , c="in", pivote:1
exp->atom param => exp , c="{", pivote:1
exp->atom param => exp , c="int", pivote:1
exp->atom param => exp , c="protocol", pivote:1
exp->atom param => exp , c="type", pivote:1
exp->atom param => exp , c="function", pivote:1
exp->atom param => exp , c="let", pivote:1
exp->atom param => exp , c="}", pivote:1
exp->atom param => exp , c=")", pivote:1
exp->atom param => exp , c="+", pivote:1
exp->atom param => exp , c="-", pivote:1
exp->atom param => exp , c="*", pivote:1
exp->atom param => exp , c="/", pivote:1
exp->atom param => exp , c="in", pivote:1
 }
 GOTO(I289,;):
I329= { 
exp->high_level ; , c="(", pivote:1
exp->high_level ; , c="{", pivote:1
exp->high_level ; , c="int", pivote:1
exp->high_level ; , c="protocol", pivote:1
exp->high_level ; , c="type", pivote:1
exp->high_level ; , c="function", pivote:1
exp->high_level ; , c="let", pivote:1
exp->high_level ; , c="}", pivote:1
exp->high_level ; , c=")", pivote:1
exp->high_level ; , c="+", pivote:1
exp->high_level ; , c="-", pivote:1
exp->high_level ; , c="*", pivote:1
exp->high_level ; , c="/", pivote:1
exp->high_level ; , c="in", pivote:1
 }
 GOTO(I293,atom):
I330= { 
atom->type label param inherits atom param block , c="(", pivote:4
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label param inherits atom param block , c=")", pivote:4
atom->type label param inherits atom param block , c="+", pivote:4
atom->type label param inherits atom param block , c="-", pivote:4
atom->type label param inherits atom param block , c="*", pivote:4
atom->type label param inherits atom param block , c="/", pivote:4
atom->type label param inherits atom param block , c="in", pivote:4
 }
 GOTO(I295,block):
I331= { 
atom->protocol label extends atom block , c="(", pivote:4
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label extends atom block , c=")", pivote:4
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->protocol label extends atom block , c="+", pivote:4
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->protocol label extends atom block , c="-", pivote:4
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->protocol label extends atom block , c="*", pivote:4
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->protocol label extends atom block , c="/", pivote:4
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->protocol label extends atom block , c="in", pivote:4
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I296,param):
I332= { 
atom->function atom param block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="(", pivote:2
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I298,=>):
I333= { 
atom->atom param => block , c=")", pivote:2
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="(", pivote:2
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I302,block):
I334= { 
atom->function atom param block , c="{", pivote:3
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->function atom param block , c="(", pivote:3
 }
 GOTO(I303,atom):
I335= { 
atom->type label inherits atom block , c="{", pivote:3
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:3
 }
 GOTO(I305,inherits):
I336= { 
atom->type label param inherits atom param block , c="{", pivote:3
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
label->int , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:3
 }
 GOTO(I305,block):
I337= { 
atom->type label param block , c="{", pivote:3
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param block , c="(", pivote:3
 }
 GOTO(I306,atom):
I338= { 
atom->protocol label extends atom block , c="{", pivote:3
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="{", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="{", pivote:0
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:3
 }
 GOTO(I309,block):
I339= { 
atom->atom param => block , c="{", pivote:3
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->atom param => block , c="(", pivote:3
 }
 GOTO(I310,exp):
I340= { 
exp->function atom param exp , c="(", pivote:3
exp->function atom param exp , c="{", pivote:3
exp->function atom param exp , c="int", pivote:3
exp->function atom param exp , c="protocol", pivote:3
exp->function atom param exp , c="type", pivote:3
exp->function atom param exp , c="function", pivote:3
exp->function atom param exp , c="let", pivote:3
exp->function atom param exp , c="}", pivote:3
exp->function atom param exp , c=";", pivote:3
exp->function atom param exp , c="+", pivote:3
exp->function atom param exp , c="-", pivote:3
exp->function atom param exp , c="*", pivote:3
exp->function atom param exp , c="/", pivote:3
exp->function atom param exp , c="in", pivote:3
 }
 GOTO(I310,high_level):
I341= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c=";", pivote:3
high_level->function atom param high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=";", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I311,exp):
I342= { 
exp->atom param => exp , c="(", pivote:3
exp->atom param => exp , c="{", pivote:3
exp->atom param => exp , c="int", pivote:3
exp->atom param => exp , c="protocol", pivote:3
exp->atom param => exp , c="type", pivote:3
exp->atom param => exp , c="function", pivote:3
exp->atom param => exp , c="let", pivote:3
exp->atom param => exp , c="}", pivote:3
exp->atom param => exp , c=";", pivote:3
exp->atom param => exp , c="+", pivote:3
exp->atom param => exp , c="-", pivote:3
exp->atom param => exp , c="*", pivote:3
exp->atom param => exp , c="/", pivote:3
exp->atom param => exp , c="in", pivote:3
 }
 GOTO(I311,high_level):
I343= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c=";", pivote:3
high_level->atom param => high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=";", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I312,block):
I344= { 
atom->type label param inherits atom param block , c="(", pivote:6
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param inherits atom param block , c=";", pivote:6
block->block block , c=";", pivote:0
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
block->block exp , c=";", pivote:0
exp->high_level ; , c=";", pivote:-1
exp->function atom param exp , c=";", pivote:-1
exp->atom param => exp , c=";", pivote:-1
block->block } , c=";", pivote:0
atom->type label param inherits atom param block , c="+", pivote:6
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param inherits atom param block , c="-", pivote:6
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param inherits atom param block , c="*", pivote:6
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param inherits atom param block , c="/", pivote:6
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param inherits atom param block , c="in", pivote:6
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I314,param):
I345= { 
exp->function atom param exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c=";", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->function atom param exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->function atom param exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->function atom param exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->function atom param exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->function atom param exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->function atom param exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->function atom param exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->function atom param exp , c=")", pivote:2
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
exp->function atom param exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->function atom param exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->function atom param exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->function atom param exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->function atom param exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
exp->function atom param exp , c=",", pivote:2
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
 }
 GOTO(I315,=>):
I346= { 
exp->atom param => exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c=";", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->atom param => exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->atom param => exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->atom param => exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->atom param => exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->atom param => exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->atom param => exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->atom param => exp , c=")", pivote:2
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
exp->atom param => exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->atom param => exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->atom param => exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->atom param => exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->atom param => exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
exp->atom param => exp , c=",", pivote:2
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
 }
 GOTO(I317,param):
I347= { 
atom->type label param inherits atom param block , c="(", pivote:5
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->type label param inherits atom param block , c=")", pivote:5
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:5
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:5
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:5
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:5
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:5
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
atom->type label param inherits atom param block , c=",", pivote:5
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
 }
 GOTO(I323,exp):
I348= { 
exp->function atom param exp , c="(", pivote:3
exp->function atom param exp , c="{", pivote:3
exp->function atom param exp , c="int", pivote:3
exp->function atom param exp , c="protocol", pivote:3
exp->function atom param exp , c="type", pivote:3
exp->function atom param exp , c="function", pivote:3
exp->function atom param exp , c="let", pivote:3
exp->function atom param exp , c="}", pivote:3
 }
 GOTO(I323,high_level):
I349= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c=";", pivote:3
high_level->function atom param high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
 }
 GOTO(I324,exp):
I350= { 
exp->atom param => exp , c="(", pivote:3
exp->atom param => exp , c="{", pivote:3
exp->atom param => exp , c="int", pivote:3
exp->atom param => exp , c="protocol", pivote:3
exp->atom param => exp , c="type", pivote:3
exp->atom param => exp , c="function", pivote:3
exp->atom param => exp , c="let", pivote:3
exp->atom param => exp , c="}", pivote:3
 }
 GOTO(I324,high_level):
I351= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c=";", pivote:3
high_level->atom param => high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
 }
 GOTO(I325,block):
I352= { 
atom->type label param inherits atom param block , c="(", pivote:6
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
 }
 GOTO(I327,param):
I353= { 
exp->function atom param exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
high_level->function atom param high_level , c=";", pivote:2
atom->function atom param block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->function atom param high_level , c="in", pivote:2
atom->function atom param block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->function atom param block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->function atom param block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->function atom param block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->function atom param block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->function atom param block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->function atom param exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->function atom param exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->function atom param exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->function atom param exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->function atom param exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->function atom param exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->function atom param exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->function atom param exp , c=")", pivote:2
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
exp->function atom param exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->function atom param exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->function atom param exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->function atom param exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->function atom param exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
 }
 GOTO(I328,=>):
I354= { 
exp->atom param => exp , c="(", pivote:2
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
high_level->atom param => high_level , c=";", pivote:2
atom->atom param => block , c="(", pivote:2
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
high_level->atom param => high_level , c="in", pivote:2
atom->atom param => block , c=";", pivote:2
block->{ exp , c=";", pivote:-1
block->block block , c=";", pivote:-1
block->block exp , c=";", pivote:-1
block->block } , c=";", pivote:-1
block->{ } , c=";", pivote:-1
atom->atom param => block , c="+", pivote:2
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->atom param => block , c="-", pivote:2
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->atom param => block , c="*", pivote:2
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->atom param => block , c="/", pivote:2
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->atom param => block , c="in", pivote:2
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
exp->atom param => exp , c="{", pivote:2
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
exp->atom param => exp , c="int", pivote:2
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
exp->atom param => exp , c="protocol", pivote:2
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
exp->atom param => exp , c="type", pivote:2
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
exp->atom param => exp , c="function", pivote:2
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
exp->atom param => exp , c="let", pivote:2
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
exp->atom param => exp , c="}", pivote:2
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
exp->atom param => exp , c=")", pivote:2
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
exp->atom param => exp , c="+", pivote:2
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
exp->atom param => exp , c="-", pivote:2
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
exp->atom param => exp , c="*", pivote:2
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
exp->atom param => exp , c="/", pivote:2
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
exp->atom param => exp , c="in", pivote:2
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
 }
 GOTO(I330,param):
I355= { 
atom->type label param inherits atom param block , c="(", pivote:5
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->type label param inherits atom param block , c=")", pivote:5
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:5
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:5
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:5
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:5
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:5
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
 }
 GOTO(I335,block):
I356= { 
atom->type label inherits atom block , c="{", pivote:4
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label inherits atom block , c="(", pivote:4
 }
 GOTO(I336,atom):
I357= { 
atom->type label param inherits atom param block , c="{", pivote:4
param->( structure ) , c="{", pivote:-1
param->( ) , c="{", pivote:-1
atom->atom param => block , c="(", pivote:0
param->( structure ) , c="=>", pivote:-1
param->( ) , c="=>", pivote:-1
atom->atom param , c="(", pivote:0
param->( structure ) , c="(", pivote:-1
param->( ) , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:4
 }
 GOTO(I338,block):
I358= { 
atom->protocol label extends atom block , c="{", pivote:4
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->protocol label extends atom block , c="(", pivote:4
 }
 GOTO(I345,exp):
I359= { 
exp->function atom param exp , c="(", pivote:3
exp->function atom param exp , c="{", pivote:3
exp->function atom param exp , c="int", pivote:3
exp->function atom param exp , c="protocol", pivote:3
exp->function atom param exp , c="type", pivote:3
exp->function atom param exp , c="function", pivote:3
exp->function atom param exp , c="let", pivote:3
exp->function atom param exp , c="}", pivote:3
exp->function atom param exp , c=")", pivote:3
exp->function atom param exp , c="+", pivote:3
exp->function atom param exp , c="-", pivote:3
exp->function atom param exp , c="*", pivote:3
exp->function atom param exp , c="/", pivote:3
exp->function atom param exp , c="in", pivote:3
exp->function atom param exp , c=",", pivote:3
 }
 GOTO(I345,high_level):
I360= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c=";", pivote:3
high_level->function atom param high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
exp->high_level ; , c=",", pivote:0
 }
 GOTO(I346,exp):
I361= { 
exp->atom param => exp , c="(", pivote:3
exp->atom param => exp , c="{", pivote:3
exp->atom param => exp , c="int", pivote:3
exp->atom param => exp , c="protocol", pivote:3
exp->atom param => exp , c="type", pivote:3
exp->atom param => exp , c="function", pivote:3
exp->atom param => exp , c="let", pivote:3
exp->atom param => exp , c="}", pivote:3
exp->atom param => exp , c=")", pivote:3
exp->atom param => exp , c="+", pivote:3
exp->atom param => exp , c="-", pivote:3
exp->atom param => exp , c="*", pivote:3
exp->atom param => exp , c="/", pivote:3
exp->atom param => exp , c="in", pivote:3
exp->atom param => exp , c=",", pivote:3
 }
 GOTO(I346,high_level):
I362= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c=";", pivote:3
high_level->atom param => high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
exp->high_level ; , c=",", pivote:0
 }
 GOTO(I347,block):
I363= { 
atom->type label param inherits atom param block , c="(", pivote:6
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param inherits atom param block , c=")", pivote:6
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label param inherits atom param block , c="+", pivote:6
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param inherits atom param block , c="-", pivote:6
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param inherits atom param block , c="*", pivote:6
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param inherits atom param block , c="/", pivote:6
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param inherits atom param block , c="in", pivote:6
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
atom->type label param inherits atom param block , c=",", pivote:6
block->block block , c=",", pivote:0
block->{ exp , c=",", pivote:-1
block->block block , c=",", pivote:-1
block->block exp , c=",", pivote:-1
block->block } , c=",", pivote:-1
block->{ } , c=",", pivote:-1
block->block exp , c=",", pivote:0
exp->high_level ; , c=",", pivote:-1
exp->function atom param exp , c=",", pivote:-1
exp->atom param => exp , c=",", pivote:-1
block->block } , c=",", pivote:0
 }
 GOTO(I353,exp):
I364= { 
exp->function atom param exp , c="(", pivote:3
exp->function atom param exp , c="{", pivote:3
exp->function atom param exp , c="int", pivote:3
exp->function atom param exp , c="protocol", pivote:3
exp->function atom param exp , c="type", pivote:3
exp->function atom param exp , c="function", pivote:3
exp->function atom param exp , c="let", pivote:3
exp->function atom param exp , c="}", pivote:3
exp->function atom param exp , c=")", pivote:3
exp->function atom param exp , c="+", pivote:3
exp->function atom param exp , c="-", pivote:3
exp->function atom param exp , c="*", pivote:3
exp->function atom param exp , c="/", pivote:3
exp->function atom param exp , c="in", pivote:3
 }
 GOTO(I353,high_level):
I365= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->function atom param high_level , c=";", pivote:3
high_level->function atom param high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I354,exp):
I366= { 
exp->atom param => exp , c="(", pivote:3
exp->atom param => exp , c="{", pivote:3
exp->atom param => exp , c="int", pivote:3
exp->atom param => exp , c="protocol", pivote:3
exp->atom param => exp , c="type", pivote:3
exp->atom param => exp , c="function", pivote:3
exp->atom param => exp , c="let", pivote:3
exp->atom param => exp , c="}", pivote:3
exp->atom param => exp , c=")", pivote:3
exp->atom param => exp , c="+", pivote:3
exp->atom param => exp , c="-", pivote:3
exp->atom param => exp , c="*", pivote:3
exp->atom param => exp , c="/", pivote:3
exp->atom param => exp , c="in", pivote:3
 }
 GOTO(I354,high_level):
I367= { 
exp->high_level ; , c="(", pivote:0
high_level->high_level in high_level , c=";", pivote:0
high_level->high_level in high_level , c="in", pivote:0
high_level->atom param => high_level , c=";", pivote:3
high_level->atom param => high_level , c="in", pivote:3
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="protocol", pivote:0
exp->high_level ; , c="type", pivote:0
exp->high_level ; , c="function", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c=")", pivote:0
exp->high_level ; , c="+", pivote:0
exp->high_level ; , c="-", pivote:0
exp->high_level ; , c="*", pivote:0
exp->high_level ; , c="/", pivote:0
exp->high_level ; , c="in", pivote:0
 }
 GOTO(I355,block):
I368= { 
atom->type label param inherits atom param block , c="(", pivote:6
block->block block , c="(", pivote:0
block->{ exp , c="(", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="(", pivote:-1
block->block } , c="(", pivote:-1
block->{ } , c="(", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="(", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param inherits atom param block , c=")", pivote:6
block->block block , c=")", pivote:0
block->{ exp , c=")", pivote:-1
block->block block , c=")", pivote:-1
block->block exp , c=")", pivote:-1
block->block } , c=")", pivote:-1
block->{ } , c=")", pivote:-1
block->block exp , c=")", pivote:0
exp->high_level ; , c=")", pivote:-1
exp->function atom param exp , c=")", pivote:-1
exp->atom param => exp , c=")", pivote:-1
block->block } , c=")", pivote:0
atom->type label param inherits atom param block , c="+", pivote:6
block->block block , c="+", pivote:0
block->{ exp , c="+", pivote:-1
block->block block , c="+", pivote:-1
block->block exp , c="+", pivote:-1
block->block } , c="+", pivote:-1
block->{ } , c="+", pivote:-1
block->block exp , c="+", pivote:0
exp->high_level ; , c="+", pivote:-1
exp->function atom param exp , c="+", pivote:-1
exp->atom param => exp , c="+", pivote:-1
block->block } , c="+", pivote:0
atom->type label param inherits atom param block , c="-", pivote:6
block->block block , c="-", pivote:0
block->{ exp , c="-", pivote:-1
block->block block , c="-", pivote:-1
block->block exp , c="-", pivote:-1
block->block } , c="-", pivote:-1
block->{ } , c="-", pivote:-1
block->block exp , c="-", pivote:0
exp->high_level ; , c="-", pivote:-1
exp->function atom param exp , c="-", pivote:-1
exp->atom param => exp , c="-", pivote:-1
block->block } , c="-", pivote:0
atom->type label param inherits atom param block , c="*", pivote:6
block->block block , c="*", pivote:0
block->{ exp , c="*", pivote:-1
block->block block , c="*", pivote:-1
block->block exp , c="*", pivote:-1
block->block } , c="*", pivote:-1
block->{ } , c="*", pivote:-1
block->block exp , c="*", pivote:0
exp->high_level ; , c="*", pivote:-1
exp->function atom param exp , c="*", pivote:-1
exp->atom param => exp , c="*", pivote:-1
block->block } , c="*", pivote:0
atom->type label param inherits atom param block , c="/", pivote:6
block->block block , c="/", pivote:0
block->{ exp , c="/", pivote:-1
block->block block , c="/", pivote:-1
block->block exp , c="/", pivote:-1
block->block } , c="/", pivote:-1
block->{ } , c="/", pivote:-1
block->block exp , c="/", pivote:0
exp->high_level ; , c="/", pivote:-1
exp->function atom param exp , c="/", pivote:-1
exp->atom param => exp , c="/", pivote:-1
block->block } , c="/", pivote:0
atom->type label param inherits atom param block , c="in", pivote:6
block->block block , c="in", pivote:0
block->{ exp , c="in", pivote:-1
block->block block , c="in", pivote:-1
block->block exp , c="in", pivote:-1
block->block } , c="in", pivote:-1
block->{ } , c="in", pivote:-1
block->block exp , c="in", pivote:0
exp->high_level ; , c="in", pivote:-1
exp->function atom param exp , c="in", pivote:-1
exp->atom param => exp , c="in", pivote:-1
block->block } , c="in", pivote:0
 }
 GOTO(I357,param):
I369= { 
atom->type label param inherits atom param block , c="{", pivote:5
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
atom->atom param => block , c="(", pivote:1
atom->atom param , c="(", pivote:1
atom->type label param inherits atom param block , c="(", pivote:5
 }
 GOTO(I369,block):
I370= { 
atom->type label param inherits atom param block , c="{", pivote:6
block->block block , c="{", pivote:0
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block } , c="{", pivote:-1
block->{ } , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="(", pivote:-1
block->{ exp , c="protocol", pivote:-1
block->{ exp , c="type", pivote:-1
block->{ exp , c="function", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="(", pivote:-1
block->block block , c="protocol", pivote:-1
block->block block , c="type", pivote:-1
block->block block , c="function", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:-1
block->block exp , c="function", pivote:-1
block->block exp , c="let", pivote:-1
block->block } , c="int", pivote:-1
block->block } , c="(", pivote:-1
block->block } , c="protocol", pivote:-1
block->block } , c="type", pivote:-1
block->block } , c="function", pivote:-1
block->block } , c="let", pivote:-1
block->{ } , c="int", pivote:-1
block->{ } , c="(", pivote:-1
block->{ } , c="protocol", pivote:-1
block->{ } , c="type", pivote:-1
block->{ } , c="function", pivote:-1
block->{ } , c="let", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->block } , c="}", pivote:-1
block->{ } , c="}", pivote:-1
block->block exp , c="{", pivote:0
exp->high_level ; , c="{", pivote:-1
exp->function atom param exp , c="{", pivote:-1
exp->atom param => exp , c="{", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->label = high_level , c=";", pivote:-1
high_level->var_declaration = high_level , c=";", pivote:-1
high_level->param in high_level , c=";", pivote:-1
high_level->high_level in high_level , c=";", pivote:-1
high_level->function atom param high_level , c=";", pivote:-1
high_level->atom param => high_level , c=";", pivote:-1
atom->label , c="(", pivote:-1
atom->( high_level ) , c="(", pivote:-1
atom->protocol label block , c="(", pivote:-1
atom->protocol label extends atom block , c="(", pivote:-1
atom->type label block , c="(", pivote:-1
atom->type label param block , c="(", pivote:-1
atom->type label inherits atom block , c="(", pivote:-1
atom->type label param inherits atom param block , c="(", pivote:-1
atom->function atom param block , c="(", pivote:-1
atom->atom param => block , c="(", pivote:-1
atom->atom param , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
label->int , c="=", pivote:-1
var_declaration->let label , c="=", pivote:-1
param->( structure ) , c="in", pivote:-1
param->( ) , c="in", pivote:-1
high_level->sum_minus , c="in", pivote:-1
high_level->label = high_level , c="in", pivote:-1
high_level->var_declaration = high_level , c="in", pivote:-1
high_level->param in high_level , c="in", pivote:-1
high_level->high_level in high_level , c="in", pivote:-1
high_level->function atom param high_level , c="in", pivote:-1
high_level->atom param => high_level , c="in", pivote:-1
label->int , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="in", pivote:-1
sum_minus->sum_minus - div_mult , c="in", pivote:-1
sum_minus->div_mult , c="in", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->label , c=";", pivote:-1
atom->( high_level ) , c=";", pivote:-1
atom->protocol label block , c=";", pivote:-1
atom->protocol label extends atom block , c=";", pivote:-1
atom->type label block , c=";", pivote:-1
atom->type label param block , c=";", pivote:-1
atom->type label inherits atom block , c=";", pivote:-1
atom->type label param inherits atom param block , c=";", pivote:-1
atom->function atom param block , c=";", pivote:-1
atom->atom param => block , c=";", pivote:-1
atom->atom param , c=";", pivote:-1
div_mult->div_mult * atom , c="in", pivote:-1
div_mult->div_mult / atom , c="in", pivote:-1
div_mult->atom , c="in", pivote:-1
atom->label , c="+", pivote:-1
atom->( high_level ) , c="+", pivote:-1
atom->protocol label block , c="+", pivote:-1
atom->protocol label extends atom block , c="+", pivote:-1
atom->type label block , c="+", pivote:-1
atom->type label param block , c="+", pivote:-1
atom->type label inherits atom block , c="+", pivote:-1
atom->type label param inherits atom param block , c="+", pivote:-1
atom->function atom param block , c="+", pivote:-1
atom->atom param => block , c="+", pivote:-1
atom->atom param , c="+", pivote:-1
atom->label , c="-", pivote:-1
atom->( high_level ) , c="-", pivote:-1
atom->protocol label block , c="-", pivote:-1
atom->protocol label extends atom block , c="-", pivote:-1
atom->type label block , c="-", pivote:-1
atom->type label param block , c="-", pivote:-1
atom->type label inherits atom block , c="-", pivote:-1
atom->type label param inherits atom param block , c="-", pivote:-1
atom->function atom param block , c="-", pivote:-1
atom->atom param => block , c="-", pivote:-1
atom->atom param , c="-", pivote:-1
atom->label , c="*", pivote:-1
atom->( high_level ) , c="*", pivote:-1
atom->protocol label block , c="*", pivote:-1
atom->protocol label extends atom block , c="*", pivote:-1
atom->type label block , c="*", pivote:-1
atom->type label param block , c="*", pivote:-1
atom->type label inherits atom block , c="*", pivote:-1
atom->type label param inherits atom param block , c="*", pivote:-1
atom->function atom param block , c="*", pivote:-1
atom->atom param => block , c="*", pivote:-1
atom->atom param , c="*", pivote:-1
atom->label , c="/", pivote:-1
atom->( high_level ) , c="/", pivote:-1
atom->protocol label block , c="/", pivote:-1
atom->protocol label extends atom block , c="/", pivote:-1
atom->type label block , c="/", pivote:-1
atom->type label param block , c="/", pivote:-1
atom->type label inherits atom block , c="/", pivote:-1
atom->type label param inherits atom param block , c="/", pivote:-1
atom->function atom param block , c="/", pivote:-1
atom->atom param => block , c="/", pivote:-1
atom->atom param , c="/", pivote:-1
label->int , c=";", pivote:-1
atom->label , c="in", pivote:-1
atom->( high_level ) , c="in", pivote:-1
atom->protocol label block , c="in", pivote:-1
atom->protocol label extends atom block , c="in", pivote:-1
atom->type label block , c="in", pivote:-1
atom->type label param block , c="in", pivote:-1
atom->type label inherits atom block , c="in", pivote:-1
atom->type label param inherits atom param block , c="in", pivote:-1
atom->function atom param block , c="in", pivote:-1
atom->atom param => block , c="in", pivote:-1
atom->atom param , c="in", pivote:-1
label->int , c="+", pivote:-1
label->int , c="-", pivote:-1
label->int , c="*", pivote:-1
label->int , c="/", pivote:-1
label->int , c="in", pivote:-1
block->block } , c="{", pivote:0
block->block block , c="int", pivote:0
block->block block , c="(", pivote:0
block->block block , c="protocol", pivote:0
block->block block , c="type", pivote:0
block->block block , c="function", pivote:0
block->block block , c="let", pivote:0
block->block exp , c="int", pivote:0
exp->high_level ; , c="int", pivote:-1
exp->function atom param exp , c="int", pivote:-1
exp->atom param => exp , c="int", pivote:-1
block->block exp , c="(", pivote:0
exp->high_level ; , c="(", pivote:-1
exp->function atom param exp , c="(", pivote:-1
exp->atom param => exp , c="(", pivote:-1
block->block exp , c="protocol", pivote:0
exp->high_level ; , c="protocol", pivote:-1
exp->function atom param exp , c="protocol", pivote:-1
exp->atom param => exp , c="protocol", pivote:-1
block->block exp , c="type", pivote:0
exp->high_level ; , c="type", pivote:-1
exp->function atom param exp , c="type", pivote:-1
exp->atom param => exp , c="type", pivote:-1
block->block exp , c="function", pivote:0
exp->high_level ; , c="function", pivote:-1
exp->function atom param exp , c="function", pivote:-1
exp->atom param => exp , c="function", pivote:-1
block->block exp , c="let", pivote:0
exp->high_level ; , c="let", pivote:-1
exp->function atom param exp , c="let", pivote:-1
exp->atom param => exp , c="let", pivote:-1
block->block } , c="int", pivote:0
block->block } , c="(", pivote:0
block->block } , c="protocol", pivote:0
block->block } , c="type", pivote:0
block->block } , c="function", pivote:0
block->block } , c="let", pivote:0
block->block block , c="}", pivote:0
block->block exp , c="}", pivote:0
exp->high_level ; , c="}", pivote:-1
exp->function atom param exp , c="}", pivote:-1
exp->atom param => exp , c="}", pivote:-1
block->block } , c="}", pivote:0
atom->type label param inherits atom param block , c="(", pivote:6
 }