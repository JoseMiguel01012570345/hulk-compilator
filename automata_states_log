
I0= { 
S->exp , c="$", pivote:-1
exp->var_declaration , c="$", pivote:-1
exp->div_mult ; , c="$", pivote:-1
exp->atom ; , c="$", pivote:-1
exp->sum_minus ; , c="$", pivote:-1
exp->block } , c="$", pivote:-1
exp->block } ; , c="$", pivote:-1
var_declaration->let atom = exp , c="$", pivote:-1
var_declaration->atom = exp , c="$", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="let", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="let", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
block->{ exp , c="int", pivote:-1
block->block block , c="int", pivote:-1
block->block exp , c="int", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I0,let):
I1= { 
var_declaration->let atom = exp , c="$", pivote:0
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
 }
 GOTO(I0,int):
I2= { 
atom->int , c=";", pivote:0
atom->int , c="=", pivote:0
atom->int , c="*", pivote:0
atom->int , c="/", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I0,():
I3= { 
atom->( sum_minus ) , c=";", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
atom->( sum_minus ) , c="=", pivote:0
atom->( sum_minus ) , c="*", pivote:0
atom->( sum_minus ) , c="/", pivote:0
atom->( sum_minus ) , c="+", pivote:0
atom->( sum_minus ) , c="-", pivote:0
 }
 GOTO(I0,{):
I4= { 
block->{ exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->{ exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
block->{ exp , c="let", pivote:0
exp->var_declaration , c="let", pivote:-1
exp->div_mult ; , c="let", pivote:-1
exp->atom ; , c="let", pivote:-1
exp->sum_minus ; , c="let", pivote:-1
exp->block } , c="let", pivote:-1
exp->block } ; , c="let", pivote:-1
var_declaration->let atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="let", pivote:-1
block->{ exp , c="int", pivote:0
exp->var_declaration , c="int", pivote:-1
exp->div_mult ; , c="int", pivote:-1
exp->atom ; , c="int", pivote:-1
exp->sum_minus ; , c="int", pivote:-1
exp->block } , c="int", pivote:-1
exp->block } ; , c="int", pivote:-1
var_declaration->let atom = exp , c="int", pivote:-1
var_declaration->atom = exp , c="int", pivote:-1
 }
 GOTO(I0,exp):
I5= { 
S->exp , c="$", pivote:0
 }
 GOTO(I0,sum_minus):
I6= { 
exp->sum_minus ; , c="$", pivote:0
sum_minus->sum_minus + div_mult , c=";", pivote:0
sum_minus->sum_minus - div_mult , c=";", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
 }
 GOTO(I0,atom):
I7= { 
exp->atom ; , c="$", pivote:0
var_declaration->atom = exp , c="$", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
 }
 GOTO(I0,div_mult):
I8= { 
exp->div_mult ; , c="$", pivote:0
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
sum_minus->div_mult , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I0,var_declaration):
I9= { 
exp->var_declaration , c="$", pivote:0
 }
 GOTO(I0,block):
I10= { 
exp->block } , c="$", pivote:0
exp->block } ; , c="$", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
block->block block , c="let", pivote:0
block->{ exp , c="let", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="let", pivote:0
exp->var_declaration , c="let", pivote:-1
exp->div_mult ; , c="let", pivote:-1
exp->atom ; , c="let", pivote:-1
exp->sum_minus ; , c="let", pivote:-1
exp->block } , c="let", pivote:-1
exp->block } ; , c="let", pivote:-1
var_declaration->let atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="let", pivote:-1
block->block block , c="int", pivote:0
block->{ exp , c="int", pivote:-1
block->block block , c="int", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="int", pivote:0
exp->var_declaration , c="int", pivote:-1
exp->div_mult ; , c="int", pivote:-1
exp->atom ; , c="int", pivote:-1
exp->sum_minus ; , c="int", pivote:-1
exp->block } , c="int", pivote:-1
exp->block } ; , c="int", pivote:-1
var_declaration->let atom = exp , c="int", pivote:-1
var_declaration->atom = exp , c="int", pivote:-1
 }
 GOTO(I1,int):
I11= { 
atom->int , c="=", pivote:0
 }
 GOTO(I1,():
I12= { 
atom->( sum_minus ) , c="=", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
 }
 GOTO(I1,atom):
I13= { 
var_declaration->let atom = exp , c="$", pivote:1
 }
 GOTO(I3,int):
I14= { 
atom->int , c=")", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
atom->int , c="*", pivote:0
atom->int , c="/", pivote:0
 }
 GOTO(I3,():
I15= { 
atom->( sum_minus ) , c=")", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
atom->( sum_minus ) , c="+", pivote:0
atom->( sum_minus ) , c="-", pivote:0
atom->( sum_minus ) , c="*", pivote:0
atom->( sum_minus ) , c="/", pivote:0
 }
 GOTO(I3,sum_minus):
I16= { 
atom->( sum_minus ) , c=";", pivote:1
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
atom->( sum_minus ) , c="=", pivote:1
atom->( sum_minus ) , c="*", pivote:1
atom->( sum_minus ) , c="/", pivote:1
atom->( sum_minus ) , c="+", pivote:1
atom->( sum_minus ) , c="-", pivote:1
 }
 GOTO(I3,atom):
I17= { 
div_mult->atom , c=")", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
 }
 GOTO(I3,div_mult):
I18= { 
sum_minus->div_mult , c=")", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
 }
 GOTO(I4,let):
I19= { 
var_declaration->let atom = exp , c="}", pivote:0
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
var_declaration->let atom = exp , c="{", pivote:0
var_declaration->let atom = exp , c="let", pivote:0
var_declaration->let atom = exp , c="int", pivote:0
 }
 GOTO(I4,{):
I20= { 
block->{ exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->{ exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
 }
 GOTO(I4,exp):
I21= { 
block->{ exp , c="}", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="int", pivote:1
 }
 GOTO(I4,sum_minus):
I22= { 
exp->sum_minus ; , c="}", pivote:0
sum_minus->sum_minus + div_mult , c=";", pivote:0
sum_minus->sum_minus - div_mult , c=";", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
exp->sum_minus ; , c="{", pivote:0
exp->sum_minus ; , c="let", pivote:0
exp->sum_minus ; , c="int", pivote:0
 }
 GOTO(I4,atom):
I23= { 
exp->atom ; , c="}", pivote:0
var_declaration->atom = exp , c="}", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
exp->atom ; , c="{", pivote:0
var_declaration->atom = exp , c="{", pivote:0
exp->atom ; , c="let", pivote:0
var_declaration->atom = exp , c="let", pivote:0
exp->atom ; , c="int", pivote:0
var_declaration->atom = exp , c="int", pivote:0
 }
 GOTO(I4,div_mult):
I24= { 
exp->div_mult ; , c="}", pivote:0
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
sum_minus->div_mult , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
exp->div_mult ; , c="{", pivote:0
exp->div_mult ; , c="let", pivote:0
exp->div_mult ; , c="int", pivote:0
 }
 GOTO(I4,var_declaration):
I25= { 
exp->var_declaration , c="}", pivote:0
exp->var_declaration , c="{", pivote:0
exp->var_declaration , c="let", pivote:0
exp->var_declaration , c="int", pivote:0
 }
 GOTO(I4,block):
I26= { 
exp->block } , c="}", pivote:0
exp->block } ; , c="}", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
exp->block } , c="{", pivote:0
exp->block } ; , c="{", pivote:0
exp->block } , c="let", pivote:0
exp->block } ; , c="let", pivote:0
exp->block } , c="int", pivote:0
exp->block } ; , c="int", pivote:0
 }
 GOTO(I6,;):
I27= { 
exp->sum_minus ; , c="$", pivote:1
 }
 GOTO(I6,+):
I28= { 
sum_minus->sum_minus + div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I6,-):
I29= { 
sum_minus->sum_minus - div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I7,=):
I30= { 
var_declaration->atom = exp , c="$", pivote:1
exp->var_declaration , c="$", pivote:-1
exp->div_mult ; , c="$", pivote:-1
exp->atom ; , c="$", pivote:-1
exp->sum_minus ; , c="$", pivote:-1
exp->block } , c="$", pivote:-1
exp->block } ; , c="$", pivote:-1
var_declaration->let atom = exp , c="$", pivote:-1
var_declaration->atom = exp , c="$", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I7,;):
I31= { 
exp->atom ; , c="$", pivote:1
 }
 GOTO(I8,;):
I32= { 
exp->div_mult ; , c="$", pivote:1
 }
 GOTO(I8,*):
I33= { 
div_mult->div_mult * atom , c=";", pivote:1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I8,/):
I34= { 
div_mult->div_mult / atom , c=";", pivote:1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I10,}):
I35= { 
exp->block } , c="$", pivote:1
exp->block } ; , c="$", pivote:1
 }
 GOTO(I10,exp):
I36= { 
block->block exp , c="}", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="int", pivote:1
 }
 GOTO(I10,block):
I37= { 
block->block block , c="}", pivote:1
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
exp->block } , c="}", pivote:0
exp->block } ; , c="}", pivote:0
block->block block , c="{", pivote:1
exp->block } , c="{", pivote:0
exp->block } ; , c="{", pivote:0
block->block block , c="let", pivote:1
block->block block , c="let", pivote:0
block->{ exp , c="let", pivote:-1
block->block block , c="let", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="let", pivote:0
exp->var_declaration , c="let", pivote:-1
exp->div_mult ; , c="let", pivote:-1
exp->atom ; , c="let", pivote:-1
exp->sum_minus ; , c="let", pivote:-1
exp->block } , c="let", pivote:-1
exp->block } ; , c="let", pivote:-1
var_declaration->let atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="let", pivote:-1
exp->block } , c="let", pivote:0
exp->block } ; , c="let", pivote:0
block->block block , c="int", pivote:1
block->block block , c="int", pivote:0
block->{ exp , c="int", pivote:-1
block->block block , c="int", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="int", pivote:0
exp->var_declaration , c="int", pivote:-1
exp->div_mult ; , c="int", pivote:-1
exp->atom ; , c="int", pivote:-1
exp->sum_minus ; , c="int", pivote:-1
exp->block } , c="int", pivote:-1
exp->block } ; , c="int", pivote:-1
var_declaration->let atom = exp , c="int", pivote:-1
var_declaration->atom = exp , c="int", pivote:-1
exp->block } , c="int", pivote:0
exp->block } ; , c="int", pivote:0
 }
 GOTO(I12,sum_minus):
I38= { 
atom->( sum_minus ) , c="=", pivote:1
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
 }
 GOTO(I13,=):
I39= { 
var_declaration->let atom = exp , c="$", pivote:2
exp->var_declaration , c="$", pivote:-1
exp->div_mult ; , c="$", pivote:-1
exp->atom ; , c="$", pivote:-1
exp->sum_minus ; , c="$", pivote:-1
exp->block } , c="$", pivote:-1
exp->block } ; , c="$", pivote:-1
var_declaration->let atom = exp , c="$", pivote:-1
var_declaration->atom = exp , c="$", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I15,sum_minus):
I40= { 
atom->( sum_minus ) , c=")", pivote:1
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
atom->( sum_minus ) , c="+", pivote:1
atom->( sum_minus ) , c="-", pivote:1
atom->( sum_minus ) , c="*", pivote:1
atom->( sum_minus ) , c="/", pivote:1
 }
 GOTO(I16,+):
I41= { 
sum_minus->sum_minus + div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I16,-):
I42= { 
sum_minus->sum_minus - div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
 }
 GOTO(I16,)):
I43= { 
atom->( sum_minus ) , c=";", pivote:2
atom->( sum_minus ) , c="=", pivote:2
atom->( sum_minus ) , c="*", pivote:2
atom->( sum_minus ) , c="/", pivote:2
atom->( sum_minus ) , c="+", pivote:2
atom->( sum_minus ) , c="-", pivote:2
 }
 GOTO(I18,*):
I44= { 
div_mult->div_mult * atom , c=")", pivote:1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
 }
 GOTO(I18,/):
I45= { 
div_mult->div_mult / atom , c=")", pivote:1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
 }
 GOTO(I19,atom):
I46= { 
var_declaration->let atom = exp , c="}", pivote:1
var_declaration->let atom = exp , c="{", pivote:1
var_declaration->let atom = exp , c="let", pivote:1
var_declaration->let atom = exp , c="int", pivote:1
 }
 GOTO(I20,let):
I47= { 
var_declaration->let atom = exp , c="}", pivote:0
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
var_declaration->let atom = exp , c="{", pivote:0
 }
 GOTO(I20,exp):
I48= { 
block->{ exp , c="}", pivote:1
block->{ exp , c="{", pivote:1
 }
 GOTO(I20,sum_minus):
I49= { 
exp->sum_minus ; , c="}", pivote:0
sum_minus->sum_minus + div_mult , c=";", pivote:0
sum_minus->sum_minus - div_mult , c=";", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
exp->sum_minus ; , c="{", pivote:0
 }
 GOTO(I20,atom):
I50= { 
exp->atom ; , c="}", pivote:0
var_declaration->atom = exp , c="}", pivote:0
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
exp->atom ; , c="{", pivote:0
var_declaration->atom = exp , c="{", pivote:0
 }
 GOTO(I20,div_mult):
I51= { 
exp->div_mult ; , c="}", pivote:0
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
sum_minus->div_mult , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->div_mult , c="+", pivote:0
sum_minus->div_mult , c="-", pivote:0
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
exp->div_mult ; , c="{", pivote:0
 }
 GOTO(I20,var_declaration):
I52= { 
exp->var_declaration , c="}", pivote:0
exp->var_declaration , c="{", pivote:0
 }
 GOTO(I20,block):
I53= { 
exp->block } , c="}", pivote:0
exp->block } ; , c="}", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
exp->block } , c="{", pivote:0
exp->block } ; , c="{", pivote:0
 }
 GOTO(I22,;):
I54= { 
exp->sum_minus ; , c="}", pivote:1
exp->sum_minus ; , c="{", pivote:1
exp->sum_minus ; , c="let", pivote:1
exp->sum_minus ; , c="int", pivote:1
 }
 GOTO(I23,=):
I55= { 
var_declaration->atom = exp , c="}", pivote:1
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
var_declaration->atom = exp , c="{", pivote:1
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="let", pivote:1
exp->var_declaration , c="let", pivote:-1
exp->div_mult ; , c="let", pivote:-1
exp->atom ; , c="let", pivote:-1
exp->sum_minus ; , c="let", pivote:-1
exp->block } , c="let", pivote:-1
exp->block } ; , c="let", pivote:-1
var_declaration->let atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="int", pivote:1
exp->var_declaration , c="int", pivote:-1
exp->div_mult ; , c="int", pivote:-1
exp->atom ; , c="int", pivote:-1
exp->sum_minus ; , c="int", pivote:-1
exp->block } , c="int", pivote:-1
exp->block } ; , c="int", pivote:-1
var_declaration->let atom = exp , c="int", pivote:-1
var_declaration->atom = exp , c="int", pivote:-1
 }
 GOTO(I23,;):
I56= { 
exp->atom ; , c="}", pivote:1
exp->atom ; , c="{", pivote:1
exp->atom ; , c="let", pivote:1
exp->atom ; , c="int", pivote:1
 }
 GOTO(I24,;):
I57= { 
exp->div_mult ; , c="}", pivote:1
exp->div_mult ; , c="{", pivote:1
exp->div_mult ; , c="let", pivote:1
exp->div_mult ; , c="int", pivote:1
 }
 GOTO(I26,}):
I58= { 
exp->block } , c="}", pivote:1
exp->block } ; , c="}", pivote:1
exp->block } , c="{", pivote:1
exp->block } ; , c="{", pivote:1
exp->block } , c="let", pivote:1
exp->block } ; , c="let", pivote:1
exp->block } , c="int", pivote:1
exp->block } ; , c="int", pivote:1
 }
 GOTO(I26,exp):
I59= { 
block->block exp , c="}", pivote:1
block->block exp , c="{", pivote:1
 }
 GOTO(I26,block):
I60= { 
block->block block , c="}", pivote:1
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
exp->block } , c="}", pivote:0
exp->block } ; , c="}", pivote:0
block->block block , c="{", pivote:1
exp->block } , c="{", pivote:0
exp->block } ; , c="{", pivote:0
 }
 GOTO(I28,int):
I61= { 
atom->int , c=";", pivote:0
atom->int , c="*", pivote:0
atom->int , c="/", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I28,():
I62= { 
atom->( sum_minus ) , c=";", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->div_mult , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->( sum_minus ) , c=")", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
atom->( sum_minus ) , c="*", pivote:0
atom->( sum_minus ) , c="/", pivote:0
atom->( sum_minus ) , c="+", pivote:0
atom->( sum_minus ) , c="-", pivote:0
 }
 GOTO(I28,atom):
I63= { 
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
 }
 GOTO(I28,div_mult):
I64= { 
sum_minus->sum_minus + div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I29,div_mult):
I65= { 
sum_minus->sum_minus - div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I30,exp):
I66= { 
var_declaration->atom = exp , c="$", pivote:2
 }
 GOTO(I30,block):
I67= { 
exp->block } , c="$", pivote:0
exp->block } ; , c="$", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->block exp , c="}", pivote:0
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
 }
 GOTO(I33,atom):
I68= { 
div_mult->div_mult * atom , c=";", pivote:2
div_mult->div_mult * atom , c="*", pivote:2
div_mult->div_mult * atom , c="/", pivote:2
div_mult->div_mult * atom , c="+", pivote:2
div_mult->div_mult * atom , c="-", pivote:2
 }
 GOTO(I34,atom):
I69= { 
div_mult->div_mult / atom , c=";", pivote:2
div_mult->div_mult / atom , c="*", pivote:2
div_mult->div_mult / atom , c="/", pivote:2
div_mult->div_mult / atom , c="+", pivote:2
div_mult->div_mult / atom , c="-", pivote:2
 }
 GOTO(I35,;):
I70= { 
exp->block } ; , c="$", pivote:2
 }
 GOTO(I38,)):
I71= { 
atom->( sum_minus ) , c="=", pivote:2
 }
 GOTO(I39,exp):
I72= { 
var_declaration->let atom = exp , c="$", pivote:3
 }
 GOTO(I40,)):
I73= { 
atom->( sum_minus ) , c=")", pivote:2
atom->( sum_minus ) , c="+", pivote:2
atom->( sum_minus ) , c="-", pivote:2
atom->( sum_minus ) , c="*", pivote:2
atom->( sum_minus ) , c="/", pivote:2
 }
 GOTO(I41,div_mult):
I74= { 
sum_minus->sum_minus + div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I42,div_mult):
I75= { 
sum_minus->sum_minus - div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I44,atom):
I76= { 
div_mult->div_mult * atom , c=")", pivote:2
div_mult->div_mult * atom , c="+", pivote:2
div_mult->div_mult * atom , c="-", pivote:2
div_mult->div_mult * atom , c="*", pivote:2
div_mult->div_mult * atom , c="/", pivote:2
 }
 GOTO(I45,atom):
I77= { 
div_mult->div_mult / atom , c=")", pivote:2
div_mult->div_mult / atom , c="+", pivote:2
div_mult->div_mult / atom , c="-", pivote:2
div_mult->div_mult / atom , c="*", pivote:2
div_mult->div_mult / atom , c="/", pivote:2
 }
 GOTO(I46,=):
I78= { 
var_declaration->let atom = exp , c="}", pivote:2
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
var_declaration->let atom = exp , c="{", pivote:2
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
var_declaration->let atom = exp , c="let", pivote:2
exp->var_declaration , c="let", pivote:-1
exp->div_mult ; , c="let", pivote:-1
exp->atom ; , c="let", pivote:-1
exp->sum_minus ; , c="let", pivote:-1
exp->block } , c="let", pivote:-1
exp->block } ; , c="let", pivote:-1
var_declaration->let atom = exp , c="let", pivote:-1
var_declaration->atom = exp , c="let", pivote:-1
var_declaration->let atom = exp , c="int", pivote:2
exp->var_declaration , c="int", pivote:-1
exp->div_mult ; , c="int", pivote:-1
exp->atom ; , c="int", pivote:-1
exp->sum_minus ; , c="int", pivote:-1
exp->block } , c="int", pivote:-1
exp->block } ; , c="int", pivote:-1
var_declaration->let atom = exp , c="int", pivote:-1
var_declaration->atom = exp , c="int", pivote:-1
 }
 GOTO(I47,atom):
I79= { 
var_declaration->let atom = exp , c="}", pivote:1
var_declaration->let atom = exp , c="{", pivote:1
 }
 GOTO(I49,;):
I80= { 
exp->sum_minus ; , c="}", pivote:1
exp->sum_minus ; , c="{", pivote:1
 }
 GOTO(I50,=):
I81= { 
var_declaration->atom = exp , c="}", pivote:1
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
var_declaration->atom = exp , c="{", pivote:1
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
 }
 GOTO(I50,;):
I82= { 
exp->atom ; , c="}", pivote:1
exp->atom ; , c="{", pivote:1
 }
 GOTO(I51,;):
I83= { 
exp->div_mult ; , c="}", pivote:1
exp->div_mult ; , c="{", pivote:1
 }
 GOTO(I53,}):
I84= { 
exp->block } , c="}", pivote:1
exp->block } ; , c="}", pivote:1
exp->block } , c="{", pivote:1
exp->block } ; , c="{", pivote:1
 }
 GOTO(I55,exp):
I85= { 
var_declaration->atom = exp , c="}", pivote:2
var_declaration->atom = exp , c="{", pivote:2
var_declaration->atom = exp , c="let", pivote:2
var_declaration->atom = exp , c="int", pivote:2
 }
 GOTO(I58,;):
I86= { 
exp->block } ; , c="}", pivote:2
exp->block } ; , c="{", pivote:2
exp->block } ; , c="let", pivote:2
exp->block } ; , c="int", pivote:2
 }
 GOTO(I62,sum_minus):
I87= { 
atom->( sum_minus ) , c=";", pivote:1
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
atom->( sum_minus ) , c="*", pivote:1
atom->( sum_minus ) , c="/", pivote:1
atom->( sum_minus ) , c="+", pivote:1
atom->( sum_minus ) , c="-", pivote:1
 }
 GOTO(I78,exp):
I88= { 
var_declaration->let atom = exp , c="}", pivote:3
var_declaration->let atom = exp , c="{", pivote:3
var_declaration->let atom = exp , c="let", pivote:3
var_declaration->let atom = exp , c="int", pivote:3
 }
 GOTO(I79,=):
I89= { 
var_declaration->let atom = exp , c="}", pivote:2
exp->var_declaration , c="}", pivote:-1
exp->div_mult ; , c="}", pivote:-1
exp->atom ; , c="}", pivote:-1
exp->sum_minus ; , c="}", pivote:-1
exp->block } , c="}", pivote:-1
exp->block } ; , c="}", pivote:-1
var_declaration->let atom = exp , c="}", pivote:-1
var_declaration->atom = exp , c="}", pivote:-1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
atom->int , c=";", pivote:-1
atom->( sum_minus ) , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->div_mult , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
atom->int , c="=", pivote:-1
atom->( sum_minus ) , c="=", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->div_mult , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->div_mult , c="-", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
atom->int , c="*", pivote:-1
atom->( sum_minus ) , c="*", pivote:-1
atom->int , c="/", pivote:-1
atom->( sum_minus ) , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="+", pivote:-1
atom->( sum_minus ) , c="+", pivote:-1
atom->int , c="-", pivote:-1
atom->( sum_minus ) , c="-", pivote:-1
var_declaration->let atom = exp , c="{", pivote:2
exp->var_declaration , c="{", pivote:-1
exp->div_mult ; , c="{", pivote:-1
exp->atom ; , c="{", pivote:-1
exp->sum_minus ; , c="{", pivote:-1
exp->block } , c="{", pivote:-1
exp->block } ; , c="{", pivote:-1
var_declaration->let atom = exp , c="{", pivote:-1
var_declaration->atom = exp , c="{", pivote:-1
 }
 GOTO(I81,exp):
I90= { 
var_declaration->atom = exp , c="}", pivote:2
var_declaration->atom = exp , c="{", pivote:2
 }
 GOTO(I84,;):
I91= { 
exp->block } ; , c="}", pivote:2
exp->block } ; , c="{", pivote:2
 }
 GOTO(I87,)):
I92= { 
atom->( sum_minus ) , c=";", pivote:2
atom->( sum_minus ) , c="*", pivote:2
atom->( sum_minus ) , c="/", pivote:2
atom->( sum_minus ) , c="+", pivote:2
atom->( sum_minus ) , c="-", pivote:2
 }
 GOTO(I89,exp):
I93= { 
var_declaration->let atom = exp , c="}", pivote:3
var_declaration->let atom = exp , c="{", pivote:3
 }