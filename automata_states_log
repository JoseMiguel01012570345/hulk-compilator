
I0= { 
S->exp , c="$", pivote:-1
exp->block } , c="$", pivote:-1
exp->high_level ; , c="$", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I0,let):
I1= { 
var_declaration->let atom = high_level , c=";", pivote:0
atom->int , c="=", pivote:-1
 }
 GOTO(I0,int):
I2= { 
atom->int , c=";", pivote:0
atom->int , c="=", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I0,():
I3= { 
high_level->( high_level ) , c=";", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->var_declaration , c=")", pivote:-1
high_level->( high_level ) , c=")", pivote:-1
high_level->block } , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->atom , c=")", pivote:-1
var_declaration->let atom = high_level , c=")", pivote:-1
var_declaration->atom = high_level , c=")", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I0,{):
I4= { 
block->{ exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
block->{ exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->{ exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->{ exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->{ exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
 }
 GOTO(I0,exp):
I5= { 
S->exp , c="$", pivote:0
 }
 GOTO(I0,sum_minus):
I6= { 
high_level->sum_minus , c=";", pivote:0
sum_minus->sum_minus + div_mult , c=";", pivote:0
sum_minus->sum_minus - div_mult , c=";", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
 }
 GOTO(I0,atom):
I7= { 
sum_minus->atom , c=";", pivote:0
var_declaration->atom = high_level , c=";", pivote:0
sum_minus->atom , c="+", pivote:0
sum_minus->atom , c="-", pivote:0
 }
 GOTO(I0,var_declaration):
I8= { 
high_level->var_declaration , c=";", pivote:0
 }
 GOTO(I0,block):
I9= { 
exp->block } , c="$", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
high_level->block } , c=";", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->block block , c="int", pivote:0
block->block block , c="let", pivote:0
block->block block , c="(", pivote:0
block->block exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->block exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->block exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
 }
 GOTO(I0,high_level):
I10= { 
exp->high_level ; , c="$", pivote:0
 }
 GOTO(I1,int):
I11= { 
atom->int , c="=", pivote:0
 }
 GOTO(I1,atom):
I12= { 
var_declaration->let atom = high_level , c=";", pivote:1
 }
 GOTO(I3,let):
I13= { 
var_declaration->let atom = high_level , c=")", pivote:0
atom->int , c="=", pivote:-1
 }
 GOTO(I3,int):
I14= { 
atom->int , c=")", pivote:0
atom->int , c="=", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I3,():
I15= { 
high_level->( high_level ) , c=")", pivote:0
high_level->sum_minus , c=")", pivote:-1
high_level->var_declaration , c=")", pivote:-1
high_level->( high_level ) , c=")", pivote:-1
high_level->block } , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->atom , c=")", pivote:-1
var_declaration->let atom = high_level , c=")", pivote:-1
var_declaration->atom = high_level , c=")", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I3,sum_minus):
I16= { 
high_level->sum_minus , c=")", pivote:0
sum_minus->sum_minus + div_mult , c=")", pivote:0
sum_minus->sum_minus - div_mult , c=")", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:0
 }
 GOTO(I3,atom):
I17= { 
sum_minus->atom , c=")", pivote:0
var_declaration->atom = high_level , c=")", pivote:0
sum_minus->atom , c="+", pivote:0
sum_minus->atom , c="-", pivote:0
 }
 GOTO(I3,var_declaration):
I18= { 
high_level->var_declaration , c=")", pivote:0
 }
 GOTO(I3,block):
I19= { 
high_level->block } , c=")", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->block block , c="int", pivote:0
block->block block , c="let", pivote:0
block->block block , c="(", pivote:0
block->block exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->block exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->block exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
 }
 GOTO(I3,high_level):
I20= { 
high_level->( high_level ) , c=";", pivote:1
 }
 GOTO(I4,exp):
I21= { 
block->{ exp , c="}", pivote:1
block->{ exp , c="{", pivote:1
block->{ exp , c="int", pivote:1
block->{ exp , c="let", pivote:1
block->{ exp , c="(", pivote:1
 }
 GOTO(I4,block):
I22= { 
exp->block } , c="}", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
high_level->block } , c=";", pivote:0
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->block block , c="int", pivote:0
block->block block , c="let", pivote:0
block->block block , c="(", pivote:0
block->block exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->block exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->block exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
exp->block } , c="{", pivote:0
exp->block } , c="int", pivote:0
exp->block } , c="let", pivote:0
exp->block } , c="(", pivote:0
 }
 GOTO(I4,high_level):
I23= { 
exp->high_level ; , c="}", pivote:0
exp->high_level ; , c="{", pivote:0
exp->high_level ; , c="int", pivote:0
exp->high_level ; , c="let", pivote:0
exp->high_level ; , c="(", pivote:0
 }
 GOTO(I6,+):
I24= { 
sum_minus->sum_minus + div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="*", pivote:-1
atom->int , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I6,-):
I25= { 
sum_minus->sum_minus - div_mult , c=";", pivote:1
div_mult->div_mult * atom , c=";", pivote:-1
div_mult->div_mult / atom , c=";", pivote:-1
div_mult->atom , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="*", pivote:-1
atom->int , c="/", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I7,=):
I26= { 
var_declaration->atom = high_level , c=";", pivote:1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I9,}):
I27= { 
exp->block } , c="$", pivote:1
high_level->block } , c=";", pivote:1
 }
 GOTO(I9,exp):
I28= { 
block->block exp , c="}", pivote:1
block->block exp , c="{", pivote:1
block->block exp , c="int", pivote:1
block->block exp , c="let", pivote:1
block->block exp , c="(", pivote:1
 }
 GOTO(I9,block):
I29= { 
block->block block , c="}", pivote:1
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->block block , c="int", pivote:0
block->block block , c="let", pivote:0
block->block block , c="(", pivote:0
block->block exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->block exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->block exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
exp->block } , c="}", pivote:0
high_level->block } , c=";", pivote:0
block->block block , c="{", pivote:1
exp->block } , c="{", pivote:0
block->block block , c="int", pivote:1
block->block block , c="let", pivote:1
block->block block , c="(", pivote:1
exp->block } , c="int", pivote:0
exp->block } , c="let", pivote:0
exp->block } , c="(", pivote:0
 }
 GOTO(I10,;):
I30= { 
exp->high_level ; , c="$", pivote:1
 }
 GOTO(I12,=):
I31= { 
var_declaration->let atom = high_level , c=";", pivote:2
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I13,atom):
I32= { 
var_declaration->let atom = high_level , c=")", pivote:1
 }
 GOTO(I15,high_level):
I33= { 
high_level->( high_level ) , c=")", pivote:1
 }
 GOTO(I16,+):
I34= { 
sum_minus->sum_minus + div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="*", pivote:-1
atom->int , c="/", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I16,-):
I35= { 
sum_minus->sum_minus - div_mult , c=")", pivote:1
div_mult->div_mult * atom , c=")", pivote:-1
div_mult->div_mult / atom , c=")", pivote:-1
div_mult->atom , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:-1
div_mult->div_mult / atom , c="*", pivote:-1
div_mult->atom , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:-1
div_mult->div_mult / atom , c="/", pivote:-1
div_mult->atom , c="/", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="*", pivote:-1
atom->int , c="/", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:1
div_mult->div_mult * atom , c="+", pivote:-1
div_mult->div_mult / atom , c="+", pivote:-1
div_mult->atom , c="+", pivote:-1
atom->int , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:1
div_mult->div_mult * atom , c="-", pivote:-1
div_mult->div_mult / atom , c="-", pivote:-1
div_mult->atom , c="-", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I17,=):
I36= { 
var_declaration->atom = high_level , c=")", pivote:1
high_level->sum_minus , c=")", pivote:-1
high_level->var_declaration , c=")", pivote:-1
high_level->( high_level ) , c=")", pivote:-1
high_level->block } , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->atom , c=")", pivote:-1
var_declaration->let atom = high_level , c=")", pivote:-1
var_declaration->atom = high_level , c=")", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I19,}):
I37= { 
high_level->block } , c=")", pivote:1
 }
 GOTO(I20,)):
I38= { 
high_level->( high_level ) , c=";", pivote:2
 }
 GOTO(I22,}):
I39= { 
exp->block } , c="}", pivote:1
high_level->block } , c=";", pivote:1
exp->block } , c="{", pivote:1
exp->block } , c="int", pivote:1
exp->block } , c="let", pivote:1
exp->block } , c="(", pivote:1
 }
 GOTO(I23,;):
I40= { 
exp->high_level ; , c="}", pivote:1
exp->high_level ; , c="{", pivote:1
exp->high_level ; , c="int", pivote:1
exp->high_level ; , c="let", pivote:1
exp->high_level ; , c="(", pivote:1
 }
 GOTO(I24,int):
I41= { 
atom->int , c=";", pivote:0
atom->int , c="*", pivote:0
atom->int , c="/", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I24,atom):
I42= { 
div_mult->atom , c=";", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
 }
 GOTO(I24,div_mult):
I43= { 
sum_minus->sum_minus + div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I25,div_mult):
I44= { 
sum_minus->sum_minus - div_mult , c=";", pivote:2
div_mult->div_mult * atom , c=";", pivote:0
div_mult->div_mult / atom , c=";", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I26,block):
I45= { 
high_level->block } , c=";", pivote:0
block->block block , c="}", pivote:0
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
block->block exp , c="}", pivote:0
exp->block } , c="}", pivote:-1
exp->high_level ; , c="}", pivote:-1
high_level->sum_minus , c=";", pivote:-1
high_level->var_declaration , c=";", pivote:-1
high_level->( high_level ) , c=";", pivote:-1
high_level->block } , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c=";", pivote:-1
sum_minus->sum_minus - div_mult , c=";", pivote:-1
sum_minus->atom , c=";", pivote:-1
var_declaration->let atom = high_level , c=";", pivote:-1
var_declaration->atom = high_level , c=";", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=";", pivote:-1
atom->int , c="=", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
block->block block , c="{", pivote:0
block->block exp , c="{", pivote:0
exp->block } , c="{", pivote:-1
exp->high_level ; , c="{", pivote:-1
block->block block , c="int", pivote:0
block->block block , c="let", pivote:0
block->block block , c="(", pivote:0
block->block exp , c="int", pivote:0
exp->block } , c="int", pivote:-1
exp->high_level ; , c="int", pivote:-1
block->block exp , c="let", pivote:0
exp->block } , c="let", pivote:-1
exp->high_level ; , c="let", pivote:-1
block->block exp , c="(", pivote:0
exp->block } , c="(", pivote:-1
exp->high_level ; , c="(", pivote:-1
 }
 GOTO(I26,high_level):
I46= { 
var_declaration->atom = high_level , c=";", pivote:2
 }
 GOTO(I31,high_level):
I47= { 
var_declaration->let atom = high_level , c=";", pivote:3
 }
 GOTO(I32,=):
I48= { 
var_declaration->let atom = high_level , c=")", pivote:2
high_level->sum_minus , c=")", pivote:-1
high_level->var_declaration , c=")", pivote:-1
high_level->( high_level ) , c=")", pivote:-1
high_level->block } , c=")", pivote:-1
sum_minus->sum_minus + div_mult , c=")", pivote:-1
sum_minus->sum_minus - div_mult , c=")", pivote:-1
sum_minus->atom , c=")", pivote:-1
var_declaration->let atom = high_level , c=")", pivote:-1
var_declaration->atom = high_level , c=")", pivote:-1
block->{ exp , c="}", pivote:-1
block->block block , c="}", pivote:-1
block->block exp , c="}", pivote:-1
sum_minus->sum_minus + div_mult , c="+", pivote:-1
sum_minus->sum_minus - div_mult , c="+", pivote:-1
sum_minus->atom , c="+", pivote:-1
sum_minus->sum_minus + div_mult , c="-", pivote:-1
sum_minus->sum_minus - div_mult , c="-", pivote:-1
sum_minus->atom , c="-", pivote:-1
atom->int , c=")", pivote:-1
atom->int , c="=", pivote:-1
block->{ exp , c="{", pivote:-1
block->block block , c="{", pivote:-1
block->block exp , c="{", pivote:-1
block->{ exp , c="int", pivote:-1
block->{ exp , c="let", pivote:-1
block->{ exp , c="(", pivote:-1
block->block block , c="int", pivote:-1
block->block block , c="let", pivote:-1
block->block block , c="(", pivote:-1
block->block exp , c="int", pivote:-1
block->block exp , c="let", pivote:-1
block->block exp , c="(", pivote:-1
atom->int , c="+", pivote:-1
atom->int , c="-", pivote:-1
 }
 GOTO(I33,)):
I49= { 
high_level->( high_level ) , c=")", pivote:2
 }
 GOTO(I34,int):
I50= { 
atom->int , c=")", pivote:0
atom->int , c="*", pivote:0
atom->int , c="/", pivote:0
atom->int , c="+", pivote:0
atom->int , c="-", pivote:0
 }
 GOTO(I34,atom):
I51= { 
div_mult->atom , c=")", pivote:0
div_mult->atom , c="*", pivote:0
div_mult->atom , c="/", pivote:0
div_mult->atom , c="+", pivote:0
div_mult->atom , c="-", pivote:0
 }
 GOTO(I34,div_mult):
I52= { 
sum_minus->sum_minus + div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus + div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus + div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I35,div_mult):
I53= { 
sum_minus->sum_minus - div_mult , c=")", pivote:2
div_mult->div_mult * atom , c=")", pivote:0
div_mult->div_mult / atom , c=")", pivote:0
div_mult->div_mult * atom , c="*", pivote:0
div_mult->div_mult / atom , c="*", pivote:0
div_mult->div_mult * atom , c="/", pivote:0
div_mult->div_mult / atom , c="/", pivote:0
sum_minus->sum_minus - div_mult , c="+", pivote:2
div_mult->div_mult * atom , c="+", pivote:0
div_mult->div_mult / atom , c="+", pivote:0
sum_minus->sum_minus - div_mult , c="-", pivote:2
div_mult->div_mult * atom , c="-", pivote:0
div_mult->div_mult / atom , c="-", pivote:0
 }
 GOTO(I36,high_level):
I54= { 
var_declaration->atom = high_level , c=")", pivote:2
 }
 GOTO(I43,*):
I55= { 
div_mult->div_mult * atom , c=";", pivote:1
atom->int , c=";", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->int , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->int , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->int , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->int , c="-", pivote:-1
 }
 GOTO(I43,/):
I56= { 
div_mult->div_mult / atom , c=";", pivote:1
atom->int , c=";", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->int , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->int , c="/", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->int , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->int , c="-", pivote:-1
 }
 GOTO(I45,}):
I57= { 
high_level->block } , c=";", pivote:1
 }
 GOTO(I48,high_level):
I58= { 
var_declaration->let atom = high_level , c=")", pivote:3
 }
 GOTO(I52,*):
I59= { 
div_mult->div_mult * atom , c=")", pivote:1
atom->int , c=")", pivote:-1
div_mult->div_mult * atom , c="*", pivote:1
atom->int , c="*", pivote:-1
div_mult->div_mult * atom , c="/", pivote:1
atom->int , c="/", pivote:-1
div_mult->div_mult * atom , c="+", pivote:1
atom->int , c="+", pivote:-1
div_mult->div_mult * atom , c="-", pivote:1
atom->int , c="-", pivote:-1
 }
 GOTO(I52,/):
I60= { 
div_mult->div_mult / atom , c=")", pivote:1
atom->int , c=")", pivote:-1
div_mult->div_mult / atom , c="*", pivote:1
atom->int , c="*", pivote:-1
div_mult->div_mult / atom , c="/", pivote:1
atom->int , c="/", pivote:-1
div_mult->div_mult / atom , c="+", pivote:1
atom->int , c="+", pivote:-1
div_mult->div_mult / atom , c="-", pivote:1
atom->int , c="-", pivote:-1
 }
 GOTO(I55,atom):
I61= { 
div_mult->div_mult * atom , c=";", pivote:2
div_mult->div_mult * atom , c="*", pivote:2
div_mult->div_mult * atom , c="/", pivote:2
div_mult->div_mult * atom , c="+", pivote:2
div_mult->div_mult * atom , c="-", pivote:2
 }
 GOTO(I56,atom):
I62= { 
div_mult->div_mult / atom , c=";", pivote:2
div_mult->div_mult / atom , c="*", pivote:2
div_mult->div_mult / atom , c="/", pivote:2
div_mult->div_mult / atom , c="+", pivote:2
div_mult->div_mult / atom , c="-", pivote:2
 }
 GOTO(I59,atom):
I63= { 
div_mult->div_mult * atom , c=")", pivote:2
div_mult->div_mult * atom , c="*", pivote:2
div_mult->div_mult * atom , c="/", pivote:2
div_mult->div_mult * atom , c="+", pivote:2
div_mult->div_mult * atom , c="-", pivote:2
 }
 GOTO(I60,atom):
I64= { 
div_mult->div_mult / atom , c=")", pivote:2
div_mult->div_mult / atom , c="*", pivote:2
div_mult->div_mult / atom , c="/", pivote:2
div_mult->div_mult / atom , c="+", pivote:2
div_mult->div_mult / atom , c="-", pivote:2
 }